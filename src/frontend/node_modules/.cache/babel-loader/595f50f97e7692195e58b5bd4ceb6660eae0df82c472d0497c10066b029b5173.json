{"ast":null,"code":"import{Actor,HttpAgent}from'@dfinity/agent';// Detect environment properly\nconst getHost=()=>{if(process.env.NODE_ENV==='development'){return'http://localhost:4943';}if(window.location.hostname==='localhost'||window.location.hostname==='127.0.0.1'){return'http://localhost:4943';}if(window.location.hostname.includes('localhost')){return'http://localhost:4943';}return'https://ic0.app';};const host=getHost();const isLocal=host.includes('localhost')||host.includes('127.0.0.1');// IDL Factory (tetap sama seperti sebelumnya)\nconst idlFactory=_ref=>{let{IDL}=_ref;const UserId=IDL.Text;const GroupId=IDL.Text;const MessageId=IDL.Nat;const Email=IDL.Text;const OTPCode=IDL.Text;const MessageType=IDL.Variant({'text':IDL.Null,'image':IDL.Null,'document':IDL.Null,'file':IDL.Null});const User=IDL.Record({'id':UserId,'email':Email,'name':IDL.Text,'avatar':IDL.Opt(IDL.Text),'isOnline':IDL.Bool,'lastSeen':IDL.Int,'createdAt':IDL.Int});const Message=IDL.Record({'id':MessageId,'senderId':UserId,'receiverId':IDL.Opt(UserId),'groupId':IDL.Opt(GroupId),'content':IDL.Text,'messageType':MessageType,'timestamp':IDL.Int,'isRead':IDL.Bool});const Group=IDL.Record({'id':GroupId,'name':IDL.Text,'description':IDL.Opt(IDL.Text),'createdBy':UserId,'members':IDL.Vec(UserId),'createdAt':IDL.Int});const AuthResult=IDL.Variant({'ok':User,'err':IDL.Text});const OTPResult=IDL.Variant({'ok':OTPCode,'err':IDL.Text});const MessageResult=IDL.Variant({'ok':MessageId,'err':IDL.Text});const GroupResult=IDL.Variant({'ok':Group,'err':IDL.Text});const Result=IDL.Variant({'ok':IDL.Null,'err':IDL.Text});const UserResult=IDL.Variant({'ok':User,'err':IDL.Text});const HealthResult=IDL.Record({'status':IDL.Text,'timestamp':IDL.Int});return IDL.Service({'generateOTP':IDL.Func([Email],[OTPResult],[]),'registerUser':IDL.Func([Email,IDL.Text,OTPCode],[AuthResult],[]),'loginUser':IDL.Func([Email],[AuthResult],[]),'logoutUser':IDL.Func([UserId],[Result],[]),'updateUserProfile':IDL.Func([UserId,IDL.Opt(IDL.Text),IDL.Opt(IDL.Text)],[UserResult],[]),'sendDirectMessage':IDL.Func([UserId,UserId,IDL.Text,MessageType],[MessageResult],[]),'sendGroupMessage':IDL.Func([UserId,GroupId,IDL.Text,MessageType],[MessageResult],[]),'createGroup':IDL.Func([IDL.Text,IDL.Opt(IDL.Text),UserId,IDL.Vec(UserId)],[GroupResult],[]),'addMemberToGroup':IDL.Func([GroupId,UserId,UserId],[GroupResult],[]),'markMessageAsRead':IDL.Func([MessageId,UserId],[Result],[]),'deleteMessage':IDL.Func([MessageId,UserId],[Result],[]),'getUser':IDL.Func([UserId],[IDL.Opt(User)],['query']),'getAllUsers':IDL.Func([],[IDL.Vec(User)],['query']),'getOnlineUsers':IDL.Func([],[IDL.Vec(User)],['query']),'getDirectMessages':IDL.Func([UserId,UserId],[IDL.Vec(Message)],['query']),'getGroupMessages':IDL.Func([GroupId],[IDL.Vec(Message)],['query']),'getUserGroups':IDL.Func([UserId],[IDL.Vec(Group)],['query']),'getGroup':IDL.Func([GroupId],[IDL.Opt(Group)],['query']),'getUnreadMessageCount':IDL.Func([UserId],[IDL.Nat],['query']),'cleanupExpiredOTPs':IDL.Func([],[],[]),'health':IDL.Func([],[HealthResult],['query'])});};// ChatAPI Class\nclass ChatAPI{constructor(){this.actor=null;this.agent=null;this.isInitialized=false;this.canisterId=null;this.initializationPromise=null;}async init(){if(this.initializationPromise){return this.initializationPromise;}if(this.isInitialized){return true;}this.initializationPromise=this._performInit();return this.initializationPromise;}async _performInit(){try{this.canisterId=process.env.REACT_APP_CANISTER_ID;if(!this.canisterId){throw new Error('REACT_APP_CANISTER_ID not found in environment variables');}console.log('Initializing ChatAPI...');console.log('Canister ID:',this.canisterId);console.log('Host:',host);console.log('Environment:',process.env.NODE_ENV);console.log('Is Local:',isLocal);// Create HTTP agent with proper configuration\nthis.agent=new HttpAgent({host,timeout:30000,// Disable certificate verification for local development\nverifyQuerySignatures:!isLocal,// Add proper headers for local development\n...(isLocal&&{retryTimes:3,requestTimeout:30000})});// ALWAYS fetch root key for local development\nif(isLocal){console.log('Fetching root key for local development...');try{await this.agent.fetchRootKey();console.log('Root key fetched successfully');}catch(rootKeyError){console.warn('Failed to fetch root key:',rootKeyError);// Continue anyway for local development\n}}// Create actor\nthis.actor=Actor.createActor(idlFactory,{agent:this.agent,canisterId:this.canisterId});// Test connection with a simple query\ntry{await this.actor.health();console.log('Health check passed');}catch(healthError){console.warn('Health check failed:',healthError);// Continue anyway if health check fails\n}this.isInitialized=true;this.initializationPromise=null;console.log('ChatAPI initialized successfully');return true;}catch(error){console.error('Failed to initialize API:',error);this.isInitialized=false;this.initializationPromise=null;throw new Error(`API initialization failed: ${error.message}`);}}async ensureInitialized(){if(!this.isInitialized){await this.init();}}handleError(error,operation){console.error(`${operation} error:`,error);// Handle certificate verification errors\nif(error.message&&error.message.includes('certificate')){console.warn('Certificate verification error - this is normal in local development');if(isLocal){// For local development, we can be more lenient\nreturn;}}if(error.message&&error.message.includes('canister_not_found')){throw new Error('Backend service is not available. Please check if the canister is running.');}if(error.message&&error.message.includes('timeout')){throw new Error('Request timed out. Please try again.');}if(error.message&&error.message.includes('connection')){throw new Error('Connection failed. Please check your internet connection.');}throw new Error(`${operation} failed: ${error.message||'Unknown error'}`);}// Wrapper method for safe calls\nasync safeCall(method){await this.ensureInitialized();for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}try{return await this.actor[method](...args);}catch(error){// Log certificate errors but don't throw for local development\nif(error.message&&error.message.includes('certificate')&&isLocal){console.warn('Certificate error in local development:',error.message);// Try again without certificate verification\ntry{return await this.actor[method](...args);}catch(retryError){throw retryError;}}throw error;}}// Authentication methods\nasync generateOTP(email){try{return await this.safeCall('generateOTP',email);}catch(error){this.handleError(error,'Generate OTP');}}async registerUser(email,name,otpCode){try{return await this.safeCall('registerUser',email,name,otpCode);}catch(error){this.handleError(error,'Register user');}}async loginUser(email){try{return await this.safeCall('loginUser',email);}catch(error){this.handleError(error,'Login user');}}async logoutUser(userId){try{return await this.safeCall('logoutUser',userId);}catch(error){this.handleError(error,'Logout user');}}async updateUserProfile(userId,name,avatar){try{return await this.safeCall('updateUserProfile',userId,name?[name]:[],avatar?[avatar]:[]);}catch(error){this.handleError(error,'Update user profile');}}// Message methods\nasync sendDirectMessage(senderId,receiverId,content){let messageType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{text:null};try{return await this.safeCall('sendDirectMessage',senderId,receiverId,content,messageType);}catch(error){this.handleError(error,'Send direct message');}}async sendGroupMessage(senderId,groupId,content){let messageType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{text:null};try{return await this.safeCall('sendGroupMessage',senderId,groupId,content,messageType);}catch(error){this.handleError(error,'Send group message');}}async markMessageAsRead(messageId,userId){try{return await this.safeCall('markMessageAsRead',messageId,userId);}catch(error){this.handleError(error,'Mark message as read');}}async deleteMessage(messageId,userId){try{return await this.safeCall('deleteMessage',messageId,userId);}catch(error){this.handleError(error,'Delete message');}}// Group methods\nasync createGroup(name,description,createdBy,members){try{return await this.safeCall('createGroup',name,description?[description]:[],createdBy,members);}catch(error){this.handleError(error,'Create group');}}async addMemberToGroup(groupId,newMemberId,addedBy){try{return await this.safeCall('addMemberToGroup',groupId,newMemberId,addedBy);}catch(error){this.handleError(error,'Add member to group');}}// Query methods\nasync getUser(userId){try{return await this.safeCall('getUser',userId);}catch(error){this.handleError(error,'Get user');}}async getAllUsers(){try{return await this.safeCall('getAllUsers');}catch(error){this.handleError(error,'Get all users');}}async getOnlineUsers(){try{return await this.safeCall('getOnlineUsers');}catch(error){this.handleError(error,'Get online users');}}async getDirectMessages(userId1,userId2){try{return await this.safeCall('getDirectMessages',userId1,userId2);}catch(error){this.handleError(error,'Get direct messages');}}async getGroupMessages(groupId){try{return await this.safeCall('getGroupMessages',groupId);}catch(error){this.handleError(error,'Get group messages');}}async getUserGroups(userId){try{return await this.safeCall('getUserGroups',userId);}catch(error){this.handleError(error,'Get user groups');}}async getGroup(groupId){try{return await this.safeCall('getGroup',groupId);}catch(error){this.handleError(error,'Get group');}}async getUnreadMessageCount(userId){try{return await this.safeCall('getUnreadMessageCount',userId);}catch(error){this.handleError(error,'Get unread message count');}}// Utility methods\nasync cleanupExpiredOTPs(){try{return await this.safeCall('cleanupExpiredOTPs');}catch(error){this.handleError(error,'Cleanup expired OTPs');}}async health(){try{return await this.safeCall('health');}catch(error){// Don't throw for health check in local development\nif(isLocal){console.warn('Health check failed in local development:',error.message);return{status:'ok',timestamp:Date.now()};}this.handleError(error,'Health check');}}// Helper methods\nisReady(){return this.isInitialized&&this.actor!==null;}getCanisterId(){return this.canisterId;}async reset(){console.log('Resetting ChatAPI...');this.isInitialized=false;this.actor=null;this.agent=null;this.canisterId=null;this.initializationPromise=null;return await this.init();}}// Export singleton instance\nconst chatAPI=new ChatAPI();export default chatAPI;","map":{"version":3,"names":["Actor","HttpAgent","getHost","process","env","NODE_ENV","window","location","hostname","includes","host","isLocal","idlFactory","_ref","IDL","UserId","Text","GroupId","MessageId","Nat","Email","OTPCode","MessageType","Variant","Null","User","Record","Opt","Bool","Int","Message","Group","Vec","AuthResult","OTPResult","MessageResult","GroupResult","Result","UserResult","HealthResult","Service","Func","ChatAPI","constructor","actor","agent","isInitialized","canisterId","initializationPromise","init","_performInit","REACT_APP_CANISTER_ID","Error","console","log","timeout","verifyQuerySignatures","retryTimes","requestTimeout","fetchRootKey","rootKeyError","warn","createActor","health","healthError","error","message","ensureInitialized","handleError","operation","safeCall","method","_len","arguments","length","args","Array","_key","retryError","generateOTP","email","registerUser","name","otpCode","loginUser","logoutUser","userId","updateUserProfile","avatar","sendDirectMessage","senderId","receiverId","content","messageType","undefined","text","sendGroupMessage","groupId","markMessageAsRead","messageId","deleteMessage","createGroup","description","createdBy","members","addMemberToGroup","newMemberId","addedBy","getUser","getAllUsers","getOnlineUsers","getDirectMessages","userId1","userId2","getGroupMessages","getUserGroups","getGroup","getUnreadMessageCount","cleanupExpiredOTPs","status","timestamp","Date","now","isReady","getCanisterId","reset","chatAPI"],"sources":["/Users/ridhoauliarahman/Library/CloudStorage/GoogleDrive-ridho.aulia7324@gmail.com/My Drive/ICP/icp-chat-app/src/frontend/src/services/api.js"],"sourcesContent":["import { Actor, HttpAgent } from '@dfinity/agent';\n\n// Detect environment properly\nconst getHost = () => {\n  if (process.env.NODE_ENV === 'development') {\n    return 'http://localhost:4943';\n  }\n  \n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:4943';\n  }\n  \n  if (window.location.hostname.includes('localhost')) {\n    return 'http://localhost:4943';\n  }\n  \n  return 'https://ic0.app';\n};\n\nconst host = getHost();\nconst isLocal = host.includes('localhost') || host.includes('127.0.0.1');\n\n// IDL Factory (tetap sama seperti sebelumnya)\nconst idlFactory = ({ IDL }) => {\n  const UserId = IDL.Text;\n  const GroupId = IDL.Text;\n  const MessageId = IDL.Nat;\n  const Email = IDL.Text;\n  const OTPCode = IDL.Text;\n\n  const MessageType = IDL.Variant({\n    'text': IDL.Null,\n    'image': IDL.Null,\n    'document': IDL.Null,\n    'file': IDL.Null,\n  });\n\n  const User = IDL.Record({\n    'id': UserId,\n    'email': Email,\n    'name': IDL.Text,\n    'avatar': IDL.Opt(IDL.Text),\n    'isOnline': IDL.Bool,\n    'lastSeen': IDL.Int,\n    'createdAt': IDL.Int,\n  });\n\n  const Message = IDL.Record({\n    'id': MessageId,\n    'senderId': UserId,\n    'receiverId': IDL.Opt(UserId),\n    'groupId': IDL.Opt(GroupId),\n    'content': IDL.Text,\n    'messageType': MessageType,\n    'timestamp': IDL.Int,\n    'isRead': IDL.Bool,\n  });\n\n  const Group = IDL.Record({\n    'id': GroupId,\n    'name': IDL.Text,\n    'description': IDL.Opt(IDL.Text),\n    'createdBy': UserId,\n    'members': IDL.Vec(UserId),\n    'createdAt': IDL.Int,\n  });\n\n  const AuthResult = IDL.Variant({\n    'ok': User,\n    'err': IDL.Text,\n  });\n\n  const OTPResult = IDL.Variant({\n    'ok': OTPCode,\n    'err': IDL.Text,\n  });\n\n  const MessageResult = IDL.Variant({\n    'ok': MessageId,\n    'err': IDL.Text,\n  });\n\n  const GroupResult = IDL.Variant({\n    'ok': Group,\n    'err': IDL.Text,\n  });\n\n  const Result = IDL.Variant({\n    'ok': IDL.Null,\n    'err': IDL.Text,\n  });\n\n  const UserResult = IDL.Variant({\n    'ok': User,\n    'err': IDL.Text,\n  });\n\n  const HealthResult = IDL.Record({\n    'status': IDL.Text,\n    'timestamp': IDL.Int,\n  });\n\n  return IDL.Service({\n    'generateOTP': IDL.Func([Email], [OTPResult], []),\n    'registerUser': IDL.Func([Email, IDL.Text, OTPCode], [AuthResult], []),\n    'loginUser': IDL.Func([Email], [AuthResult], []),\n    'logoutUser': IDL.Func([UserId], [Result], []),\n    'updateUserProfile': IDL.Func([UserId, IDL.Opt(IDL.Text), IDL.Opt(IDL.Text)], [UserResult], []),\n    'sendDirectMessage': IDL.Func([UserId, UserId, IDL.Text, MessageType], [MessageResult], []),\n    'sendGroupMessage': IDL.Func([UserId, GroupId, IDL.Text, MessageType], [MessageResult], []),\n    'createGroup': IDL.Func([IDL.Text, IDL.Opt(IDL.Text), UserId, IDL.Vec(UserId)], [GroupResult], []),\n    'addMemberToGroup': IDL.Func([GroupId, UserId, UserId], [GroupResult], []),\n    'markMessageAsRead': IDL.Func([MessageId, UserId], [Result], []),\n    'deleteMessage': IDL.Func([MessageId, UserId], [Result], []),\n    'getUser': IDL.Func([UserId], [IDL.Opt(User)], ['query']),\n    'getAllUsers': IDL.Func([], [IDL.Vec(User)], ['query']),\n    'getOnlineUsers': IDL.Func([], [IDL.Vec(User)], ['query']),\n    'getDirectMessages': IDL.Func([UserId, UserId], [IDL.Vec(Message)], ['query']),\n    'getGroupMessages': IDL.Func([GroupId], [IDL.Vec(Message)], ['query']),\n    'getUserGroups': IDL.Func([UserId], [IDL.Vec(Group)], ['query']),\n    'getGroup': IDL.Func([GroupId], [IDL.Opt(Group)], ['query']),\n    'getUnreadMessageCount': IDL.Func([UserId], [IDL.Nat], ['query']),\n    'cleanupExpiredOTPs': IDL.Func([], [], []),\n    'health': IDL.Func([], [HealthResult], ['query']),\n  });\n};\n\n// ChatAPI Class\nclass ChatAPI {\n  constructor() {\n    this.actor = null;\n    this.agent = null;\n    this.isInitialized = false;\n    this.canisterId = null;\n    this.initializationPromise = null;\n  }\n\n  async init() {\n    if (this.initializationPromise) {\n      return this.initializationPromise;\n    }\n\n    if (this.isInitialized) {\n      return true;\n    }\n\n    this.initializationPromise = this._performInit();\n    return this.initializationPromise;\n  }\n\n  async _performInit() {\n    try {\n      this.canisterId = process.env.REACT_APP_CANISTER_ID;\n      \n      if (!this.canisterId) {\n        throw new Error('REACT_APP_CANISTER_ID not found in environment variables');\n      }\n\n      console.log('Initializing ChatAPI...');\n      console.log('Canister ID:', this.canisterId);\n      console.log('Host:', host);\n      console.log('Environment:', process.env.NODE_ENV);\n      console.log('Is Local:', isLocal);\n\n      // Create HTTP agent with proper configuration\n      this.agent = new HttpAgent({ \n        host,\n        timeout: 30000,\n        // Disable certificate verification for local development\n        verifyQuerySignatures: !isLocal,\n        // Add proper headers for local development\n        ...(isLocal && {\n          retryTimes: 3,\n          requestTimeout: 30000,\n        })\n      });\n      \n      // ALWAYS fetch root key for local development\n      if (isLocal) {\n        console.log('Fetching root key for local development...');\n        try {\n          await this.agent.fetchRootKey();\n          console.log('Root key fetched successfully');\n        } catch (rootKeyError) {\n          console.warn('Failed to fetch root key:', rootKeyError);\n          // Continue anyway for local development\n        }\n      }\n\n      // Create actor\n      this.actor = Actor.createActor(idlFactory, {\n        agent: this.agent,\n        canisterId: this.canisterId,\n      });\n\n      // Test connection with a simple query\n      try {\n        await this.actor.health();\n        console.log('Health check passed');\n      } catch (healthError) {\n        console.warn('Health check failed:', healthError);\n        // Continue anyway if health check fails\n      }\n\n      this.isInitialized = true;\n      this.initializationPromise = null;\n      \n      console.log('ChatAPI initialized successfully');\n      return true;\n\n    } catch (error) {\n      console.error('Failed to initialize API:', error);\n      this.isInitialized = false;\n      this.initializationPromise = null;\n      throw new Error(`API initialization failed: ${error.message}`);\n    }\n  }\n\n  async ensureInitialized() {\n    if (!this.isInitialized) {\n      await this.init();\n    }\n  }\n\n  handleError(error, operation) {\n    console.error(`${operation} error:`, error);\n    \n    // Handle certificate verification errors\n    if (error.message && error.message.includes('certificate')) {\n      console.warn('Certificate verification error - this is normal in local development');\n      if (isLocal) {\n        // For local development, we can be more lenient\n        return;\n      }\n    }\n    \n    if (error.message && error.message.includes('canister_not_found')) {\n      throw new Error('Backend service is not available. Please check if the canister is running.');\n    }\n    \n    if (error.message && error.message.includes('timeout')) {\n      throw new Error('Request timed out. Please try again.');\n    }\n    \n    if (error.message && error.message.includes('connection')) {\n      throw new Error('Connection failed. Please check your internet connection.');\n    }\n    \n    throw new Error(`${operation} failed: ${error.message || 'Unknown error'}`);\n  }\n\n  // Wrapper method for safe calls\n  async safeCall(method, ...args) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor[method](...args);\n    } catch (error) {\n      // Log certificate errors but don't throw for local development\n      if (error.message && error.message.includes('certificate') && isLocal) {\n        console.warn('Certificate error in local development:', error.message);\n        // Try again without certificate verification\n        try {\n          return await this.actor[method](...args);\n        } catch (retryError) {\n          throw retryError;\n        }\n      }\n      throw error;\n    }\n  }\n\n  // Authentication methods\n  async generateOTP(email) {\n    try {\n      return await this.safeCall('generateOTP', email);\n    } catch (error) {\n      this.handleError(error, 'Generate OTP');\n    }\n  }\n\n  async registerUser(email, name, otpCode) {\n    try {\n      return await this.safeCall('registerUser', email, name, otpCode);\n    } catch (error) {\n      this.handleError(error, 'Register user');\n    }\n  }\n\n  async loginUser(email) {\n    try {\n      return await this.safeCall('loginUser', email);\n    } catch (error) {\n      this.handleError(error, 'Login user');\n    }\n  }\n\n  async logoutUser(userId) {\n    try {\n      return await this.safeCall('logoutUser', userId);\n    } catch (error) {\n      this.handleError(error, 'Logout user');\n    }\n  }\n\n  async updateUserProfile(userId, name, avatar) {\n    try {\n      return await this.safeCall('updateUserProfile', userId, name ? [name] : [], avatar ? [avatar] : []);\n    } catch (error) {\n      this.handleError(error, 'Update user profile');\n    }\n  }\n\n  // Message methods\n  async sendDirectMessage(senderId, receiverId, content, messageType = { text: null }) {\n    try {\n      return await this.safeCall('sendDirectMessage', senderId, receiverId, content, messageType);\n    } catch (error) {\n      this.handleError(error, 'Send direct message');\n    }\n  }\n\n  async sendGroupMessage(senderId, groupId, content, messageType = { text: null }) {\n    try {\n      return await this.safeCall('sendGroupMessage', senderId, groupId, content, messageType);\n    } catch (error) {\n      this.handleError(error, 'Send group message');\n    }\n  }\n\n  async markMessageAsRead(messageId, userId) {\n    try {\n      return await this.safeCall('markMessageAsRead', messageId, userId);\n    } catch (error) {\n      this.handleError(error, 'Mark message as read');\n    }\n  }\n\n  async deleteMessage(messageId, userId) {\n    try {\n      return await this.safeCall('deleteMessage', messageId, userId);\n    } catch (error) {\n      this.handleError(error, 'Delete message');\n    }\n  }\n\n  // Group methods\n  async createGroup(name, description, createdBy, members) {\n    try {\n      return await this.safeCall('createGroup', name, description ? [description] : [], createdBy, members);\n    } catch (error) {\n      this.handleError(error, 'Create group');\n    }\n  }\n\n  async addMemberToGroup(groupId, newMemberId, addedBy) {\n    try {\n      return await this.safeCall('addMemberToGroup', groupId, newMemberId, addedBy);\n    } catch (error) {\n      this.handleError(error, 'Add member to group');\n    }\n  }\n\n  // Query methods\n  async getUser(userId) {\n    try {\n      return await this.safeCall('getUser', userId);\n    } catch (error) {\n      this.handleError(error, 'Get user');\n    }\n  }\n\n  async getAllUsers() {\n    try {\n      return await this.safeCall('getAllUsers');\n    } catch (error) {\n      this.handleError(error, 'Get all users');\n    }\n  }\n\n  async getOnlineUsers() {\n    try {\n      return await this.safeCall('getOnlineUsers');\n    } catch (error) {\n      this.handleError(error, 'Get online users');\n    }\n  }\n\n  async getDirectMessages(userId1, userId2) {\n    try {\n      return await this.safeCall('getDirectMessages', userId1, userId2);\n    } catch (error) {\n      this.handleError(error, 'Get direct messages');\n    }\n  }\n\n  async getGroupMessages(groupId) {\n    try {\n      return await this.safeCall('getGroupMessages', groupId);\n    } catch (error) {\n      this.handleError(error, 'Get group messages');\n    }\n  }\n\n  async getUserGroups(userId) {\n    try {\n      return await this.safeCall('getUserGroups', userId);\n    } catch (error) {\n      this.handleError(error, 'Get user groups');\n    }\n  }\n\n  async getGroup(groupId) {\n    try {\n      return await this.safeCall('getGroup', groupId);\n    } catch (error) {\n      this.handleError(error, 'Get group');\n    }\n  }\n\n  async getUnreadMessageCount(userId) {\n    try {\n      return await this.safeCall('getUnreadMessageCount', userId);\n    } catch (error) {\n      this.handleError(error, 'Get unread message count');\n    }\n  }\n\n  // Utility methods\n  async cleanupExpiredOTPs() {\n    try {\n      return await this.safeCall('cleanupExpiredOTPs');\n    } catch (error) {\n      this.handleError(error, 'Cleanup expired OTPs');\n    }\n  }\n\n  async health() {\n    try {\n      return await this.safeCall('health');\n    } catch (error) {\n      // Don't throw for health check in local development\n      if (isLocal) {\n        console.warn('Health check failed in local development:', error.message);\n        return { status: 'ok', timestamp: Date.now() };\n      }\n      this.handleError(error, 'Health check');\n    }\n  }\n\n  // Helper methods\n  isReady() {\n    return this.isInitialized && this.actor !== null;\n  }\n\n  getCanisterId() {\n    return this.canisterId;\n  }\n\n  async reset() {\n    console.log('Resetting ChatAPI...');\n    this.isInitialized = false;\n    this.actor = null;\n    this.agent = null;\n    this.canisterId = null;\n    this.initializationPromise = null;\n    return await this.init();\n  }\n}\n\n// Export singleton instance\nconst chatAPI = new ChatAPI();\n\nexport default chatAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}