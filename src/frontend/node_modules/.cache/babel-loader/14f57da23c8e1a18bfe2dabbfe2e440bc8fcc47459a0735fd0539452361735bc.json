{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import chatAPI from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check if user is already logged in\nconst initializeAuth=async()=>{try{const savedUser=localStorage.getItem('currentUser');if(savedUser){const userData=JSON.parse(savedUser);console.log('🔐 Found saved user:',userData);// Verify user still exists in backend\nconst userExists=await chatAPI.getUser(userData.id);if(userExists&&userExists.length>0){setUser(userData);console.log('✅ User authenticated:',userData);}else{console.log('❌ User not found in backend, clearing localStorage');localStorage.removeItem('currentUser');}}}catch(error){console.error('❌ Auth initialization error:',error);localStorage.removeItem('currentUser');}finally{setLoading(false);}};initializeAuth();},[]);const login=async email=>{try{console.log('🚀 Attempting login for:',email);const result=await chatAPI.loginUser(email);if('ok'in result){const userData=result.ok;setUser(userData);localStorage.setItem('currentUser',JSON.stringify(userData));console.log('✅ Login successful:',userData);return{success:true,user:userData};}else{console.error('❌ Login failed:',result.err);return{success:false,error:result.err};}}catch(error){console.error('❌ Login error:',error);return{success:false,error:'Failed to login. Please try again.'};}};const register=async(email,name,otp)=>{try{console.log('🚀 Attempting registration for:',email);const result=await chatAPI.registerUser(email,name,otp);if('ok'in result){const userData=result.ok;setUser(userData);localStorage.setItem('currentUser',JSON.stringify(userData));console.log('✅ Registration successful:',userData);return{success:true,user:userData};}else{console.error('❌ Registration failed:',result.err);return{success:false,error:result.err};}}catch(error){console.error('❌ Registration error:',error);return{success:false,error:'Failed to register. Please try again.'};}};const logout=async()=>{try{if(user){console.log('🚀 Logging out user:',user.id);await chatAPI.logoutUser(user.id);}setUser(null);localStorage.removeItem('currentUser');console.log('✅ Logout successful');}catch(error){console.error('❌ Logout error:',error);// Still clear local state even if backend call fails\nsetUser(null);localStorage.removeItem('currentUser');}};const generateOTP=async email=>{try{console.log('🚀 Generating OTP for:',email);const result=await chatAPI.generateOTP(email);if('ok'in result){const otp=result.ok;console.log('✅ OTP Generated Successfully!');console.log('📧 Email:',email);console.log('🔑 OTP Code:',otp);console.log('⏰ Valid for 5 minutes');console.log('==================');return{success:true,otp};}else{console.error('❌ OTP generation failed:',result.err);return{success:false,error:result.err};}}catch(error){console.error('❌ OTP generation error:',error);return{success:false,error:'Failed to generate OTP. Please try again.'};}};const updateUserProfile=async(name,avatar)=>{try{if(!user){throw new Error('No user logged in');}console.log('🚀 Updating user profile:',user.id);const result=await chatAPI.updateUserProfile(user.id,name,avatar);if('ok'in result){const updatedUser=result.ok;setUser(updatedUser);localStorage.setItem('currentUser',JSON.stringify(updatedUser));console.log('✅ Profile updated successfully:',updatedUser);return{success:true,user:updatedUser};}else{console.error('❌ Profile update failed:',result.err);return{success:false,error:result.err};}}catch(error){console.error('❌ Profile update error:',error);return{success:false,error:'Failed to update profile. Please try again.'};}};const value={user,loading,login,register,logout,generateOTP,updateUserProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","chatAPI","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","initializeAuth","savedUser","localStorage","getItem","userData","JSON","parse","console","log","userExists","getUser","id","length","removeItem","error","login","email","result","loginUser","ok","setItem","stringify","success","err","register","name","otp","registerUser","logout","logoutUser","generateOTP","updateUserProfile","avatar","updatedUser","value","Provider"],"sources":["/Users/ridhoauliarahman/Library/CloudStorage/GoogleDrive-ridho.aulia7324@gmail.com/My Drive/ICP/icp-chat-app/src/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport chatAPI from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const initializeAuth = async () => {\n      try {\n        const savedUser = localStorage.getItem('currentUser');\n        if (savedUser) {\n          const userData = JSON.parse(savedUser);\n          console.log('🔐 Found saved user:', userData);\n          \n          // Verify user still exists in backend\n          const userExists = await chatAPI.getUser(userData.id);\n          if (userExists && userExists.length > 0) {\n            setUser(userData);\n            console.log('✅ User authenticated:', userData);\n          } else {\n            console.log('❌ User not found in backend, clearing localStorage');\n            localStorage.removeItem('currentUser');\n          }\n        }\n      } catch (error) {\n        console.error('❌ Auth initialization error:', error);\n        localStorage.removeItem('currentUser');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email) => {\n    try {\n      console.log('🚀 Attempting login for:', email);\n      const result = await chatAPI.loginUser(email);\n      \n      if ('ok' in result) {\n        const userData = result.ok;\n        setUser(userData);\n        localStorage.setItem('currentUser', JSON.stringify(userData));\n        console.log('✅ Login successful:', userData);\n        return { success: true, user: userData };\n      } else {\n        console.error('❌ Login failed:', result.err);\n        return { success: false, error: result.err };\n      }\n    } catch (error) {\n      console.error('❌ Login error:', error);\n      return { success: false, error: 'Failed to login. Please try again.' };\n    }\n  };\n\n  const register = async (email, name, otp) => {\n    try {\n      console.log('🚀 Attempting registration for:', email);\n      const result = await chatAPI.registerUser(email, name, otp);\n      \n      if ('ok' in result) {\n        const userData = result.ok;\n        setUser(userData);\n        localStorage.setItem('currentUser', JSON.stringify(userData));\n        console.log('✅ Registration successful:', userData);\n        return { success: true, user: userData };\n      } else {\n        console.error('❌ Registration failed:', result.err);\n        return { success: false, error: result.err };\n      }\n    } catch (error) {\n      console.error('❌ Registration error:', error);\n      return { success: false, error: 'Failed to register. Please try again.' };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      if (user) {\n        console.log('🚀 Logging out user:', user.id);\n        await chatAPI.logoutUser(user.id);\n      }\n      \n      setUser(null);\n      localStorage.removeItem('currentUser');\n      console.log('✅ Logout successful');\n    } catch (error) {\n      console.error('❌ Logout error:', error);\n      // Still clear local state even if backend call fails\n      setUser(null);\n      localStorage.removeItem('currentUser');\n    }\n  };\n\n  const generateOTP = async (email) => {\n    try {\n      console.log('🚀 Generating OTP for:', email);\n      const result = await chatAPI.generateOTP(email);\n      \n      if ('ok' in result) {\n        const otp = result.ok;\n        console.log('✅ OTP Generated Successfully!');\n        console.log('📧 Email:', email);\n        console.log('🔑 OTP Code:', otp);\n        console.log('⏰ Valid for 5 minutes');\n        console.log('==================');\n        \n        return { success: true, otp };\n      } else {\n        console.error('❌ OTP generation failed:', result.err);\n        return { success: false, error: result.err };\n      }\n    } catch (error) {\n      console.error('❌ OTP generation error:', error);\n      return { success: false, error: 'Failed to generate OTP. Please try again.' };\n    }\n  };\n\n  const updateUserProfile = async (name, avatar) => {\n    try {\n      if (!user) {\n        throw new Error('No user logged in');\n      }\n\n      console.log('🚀 Updating user profile:', user.id);\n      const result = await chatAPI.updateUserProfile(user.id, name, avatar);\n      \n      if ('ok' in result) {\n        const updatedUser = result.ok;\n        setUser(updatedUser);\n        localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n        console.log('✅ Profile updated successfully:', updatedUser);\n        return { success: true, user: updatedUser };\n      } else {\n        console.error('❌ Profile update failed:', result.err);\n        return { success: false, error: result.err };\n      }\n    } catch (error) {\n      console.error('❌ Profile update error:', error);\n      return { success: false, error: 'Failed to update profile. Please try again.' };\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    generateOTP,\n    updateUserProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAQ,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAe,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACrD,GAAIF,SAAS,CAAE,CACb,KAAM,CAAAG,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC,CACtCM,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEJ,QAAQ,CAAC,CAE7C;AACA,KAAM,CAAAK,UAAU,CAAG,KAAM,CAAAvB,OAAO,CAACwB,OAAO,CAACN,QAAQ,CAACO,EAAE,CAAC,CACrD,GAAIF,UAAU,EAAIA,UAAU,CAACG,MAAM,CAAG,CAAC,CAAE,CACvCf,OAAO,CAACO,QAAQ,CAAC,CACjBG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEJ,QAAQ,CAAC,CAChD,CAAC,IAAM,CACLG,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC,CACjEN,YAAY,CAACW,UAAU,CAAC,aAAa,CAAC,CACxC,CACF,CACF,CAAE,MAAOC,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpDZ,YAAY,CAACW,UAAU,CAAC,aAAa,CAAC,CACxC,CAAC,OAAS,CACRd,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAe,KAAK,CAAG,KAAO,CAAAC,KAAK,EAAK,CAC7B,GAAI,CACFT,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEQ,KAAK,CAAC,CAC9C,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAA/B,OAAO,CAACgC,SAAS,CAACF,KAAK,CAAC,CAE7C,GAAI,IAAI,EAAI,CAAAC,MAAM,CAAE,CAClB,KAAM,CAAAb,QAAQ,CAAGa,MAAM,CAACE,EAAE,CAC1BtB,OAAO,CAACO,QAAQ,CAAC,CACjBF,YAAY,CAACkB,OAAO,CAAC,aAAa,CAAEf,IAAI,CAACgB,SAAS,CAACjB,QAAQ,CAAC,CAAC,CAC7DG,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEJ,QAAQ,CAAC,CAC5C,MAAO,CAAEkB,OAAO,CAAE,IAAI,CAAE1B,IAAI,CAAEQ,QAAS,CAAC,CAC1C,CAAC,IAAM,CACLG,OAAO,CAACO,KAAK,CAAC,iBAAiB,CAAEG,MAAM,CAACM,GAAG,CAAC,CAC5C,MAAO,CAAED,OAAO,CAAE,KAAK,CAAER,KAAK,CAAEG,MAAM,CAACM,GAAI,CAAC,CAC9C,CACF,CAAE,MAAOT,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,MAAO,CAAEQ,OAAO,CAAE,KAAK,CAAER,KAAK,CAAE,oCAAqC,CAAC,CACxE,CACF,CAAC,CAED,KAAM,CAAAU,QAAQ,CAAG,KAAAA,CAAOR,KAAK,CAAES,IAAI,CAAEC,GAAG,GAAK,CAC3C,GAAI,CACFnB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEQ,KAAK,CAAC,CACrD,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAA/B,OAAO,CAACyC,YAAY,CAACX,KAAK,CAAES,IAAI,CAAEC,GAAG,CAAC,CAE3D,GAAI,IAAI,EAAI,CAAAT,MAAM,CAAE,CAClB,KAAM,CAAAb,QAAQ,CAAGa,MAAM,CAACE,EAAE,CAC1BtB,OAAO,CAACO,QAAQ,CAAC,CACjBF,YAAY,CAACkB,OAAO,CAAC,aAAa,CAAEf,IAAI,CAACgB,SAAS,CAACjB,QAAQ,CAAC,CAAC,CAC7DG,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEJ,QAAQ,CAAC,CACnD,MAAO,CAAEkB,OAAO,CAAE,IAAI,CAAE1B,IAAI,CAAEQ,QAAS,CAAC,CAC1C,CAAC,IAAM,CACLG,OAAO,CAACO,KAAK,CAAC,wBAAwB,CAAEG,MAAM,CAACM,GAAG,CAAC,CACnD,MAAO,CAAED,OAAO,CAAE,KAAK,CAAER,KAAK,CAAEG,MAAM,CAACM,GAAI,CAAC,CAC9C,CACF,CAAE,MAAOT,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,MAAO,CAAEQ,OAAO,CAAE,KAAK,CAAER,KAAK,CAAE,uCAAwC,CAAC,CAC3E,CACF,CAAC,CAED,KAAM,CAAAc,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACF,GAAIhC,IAAI,CAAE,CACRW,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEZ,IAAI,CAACe,EAAE,CAAC,CAC5C,KAAM,CAAAzB,OAAO,CAAC2C,UAAU,CAACjC,IAAI,CAACe,EAAE,CAAC,CACnC,CAEAd,OAAO,CAAC,IAAI,CAAC,CACbK,YAAY,CAACW,UAAU,CAAC,aAAa,CAAC,CACtCN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CACpC,CAAE,MAAOM,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC;AACAjB,OAAO,CAAC,IAAI,CAAC,CACbK,YAAY,CAACW,UAAU,CAAC,aAAa,CAAC,CACxC,CACF,CAAC,CAED,KAAM,CAAAiB,WAAW,CAAG,KAAO,CAAAd,KAAK,EAAK,CACnC,GAAI,CACFT,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEQ,KAAK,CAAC,CAC5C,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAA/B,OAAO,CAAC4C,WAAW,CAACd,KAAK,CAAC,CAE/C,GAAI,IAAI,EAAI,CAAAC,MAAM,CAAE,CAClB,KAAM,CAAAS,GAAG,CAAGT,MAAM,CAACE,EAAE,CACrBZ,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5CD,OAAO,CAACC,GAAG,CAAC,WAAW,CAAEQ,KAAK,CAAC,CAC/BT,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEkB,GAAG,CAAC,CAChCnB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACpCD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAEjC,MAAO,CAAEc,OAAO,CAAE,IAAI,CAAEI,GAAI,CAAC,CAC/B,CAAC,IAAM,CACLnB,OAAO,CAACO,KAAK,CAAC,0BAA0B,CAAEG,MAAM,CAACM,GAAG,CAAC,CACrD,MAAO,CAAED,OAAO,CAAE,KAAK,CAAER,KAAK,CAAEG,MAAM,CAACM,GAAI,CAAC,CAC9C,CACF,CAAE,MAAOT,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,CAAEQ,OAAO,CAAE,KAAK,CAAER,KAAK,CAAE,2CAA4C,CAAC,CAC/E,CACF,CAAC,CAED,KAAM,CAAAiB,iBAAiB,CAAG,KAAAA,CAAON,IAAI,CAAEO,MAAM,GAAK,CAChD,GAAI,CACF,GAAI,CAACpC,IAAI,CAAE,CACT,KAAM,IAAI,CAAAJ,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEAe,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEZ,IAAI,CAACe,EAAE,CAAC,CACjD,KAAM,CAAAM,MAAM,CAAG,KAAM,CAAA/B,OAAO,CAAC6C,iBAAiB,CAACnC,IAAI,CAACe,EAAE,CAAEc,IAAI,CAAEO,MAAM,CAAC,CAErE,GAAI,IAAI,EAAI,CAAAf,MAAM,CAAE,CAClB,KAAM,CAAAgB,WAAW,CAAGhB,MAAM,CAACE,EAAE,CAC7BtB,OAAO,CAACoC,WAAW,CAAC,CACpB/B,YAAY,CAACkB,OAAO,CAAC,aAAa,CAAEf,IAAI,CAACgB,SAAS,CAACY,WAAW,CAAC,CAAC,CAChE1B,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEyB,WAAW,CAAC,CAC3D,MAAO,CAAEX,OAAO,CAAE,IAAI,CAAE1B,IAAI,CAAEqC,WAAY,CAAC,CAC7C,CAAC,IAAM,CACL1B,OAAO,CAACO,KAAK,CAAC,0BAA0B,CAAEG,MAAM,CAACM,GAAG,CAAC,CACrD,MAAO,CAAED,OAAO,CAAE,KAAK,CAAER,KAAK,CAAEG,MAAM,CAACM,GAAI,CAAC,CAC9C,CACF,CAAE,MAAOT,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,CAAEQ,OAAO,CAAE,KAAK,CAAER,KAAK,CAAE,6CAA8C,CAAC,CACjF,CACF,CAAC,CAED,KAAM,CAAAoB,KAAK,CAAG,CACZtC,IAAI,CACJE,OAAO,CACPiB,KAAK,CACLS,QAAQ,CACRI,MAAM,CACNE,WAAW,CACXC,iBACF,CAAC,CAED,mBACE3C,IAAA,CAACC,WAAW,CAAC8C,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAvC,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}