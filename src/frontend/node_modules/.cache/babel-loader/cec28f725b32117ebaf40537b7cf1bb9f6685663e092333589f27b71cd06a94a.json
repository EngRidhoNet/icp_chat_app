{"ast":null,"code":"import{Actor,HttpAgent}from'@dfinity/agent';// Configuration\nconst host=process.env.NODE_ENV==='development'?'http://localhost:4943':'https://ic0.app';// IDL Factory - Interface Definition Language\nconst idlFactory=_ref=>{let{IDL}=_ref;// Basic types\nconst UserId=IDL.Text;const GroupId=IDL.Text;const MessageId=IDL.Nat;const Email=IDL.Text;const OTPCode=IDL.Text;// Message type variant\nconst MessageType=IDL.Variant({'text':IDL.Null,'image':IDL.Null,'document':IDL.Null,'file':IDL.Null});// User record\nconst User=IDL.Record({'id':UserId,'email':Email,'name':IDL.Text,'avatar':IDL.Opt(IDL.Text),'isOnline':IDL.Bool,'lastSeen':IDL.Int,'createdAt':IDL.Int});// Message record\nconst Message=IDL.Record({'id':MessageId,'senderId':UserId,'receiverId':IDL.Opt(UserId),'groupId':IDL.Opt(GroupId),'content':IDL.Text,'messageType':MessageType,'timestamp':IDL.Int,'isRead':IDL.Bool});// Group record\nconst Group=IDL.Record({'id':GroupId,'name':IDL.Text,'description':IDL.Opt(IDL.Text),'createdBy':UserId,'members':IDL.Vec(UserId),'createdAt':IDL.Int});// Result types\nconst AuthResult=IDL.Variant({'ok':User,'err':IDL.Text});const OTPResult=IDL.Variant({'ok':OTPCode,'err':IDL.Text});const MessageResult=IDL.Variant({'ok':MessageId,'err':IDL.Text});const GroupResult=IDL.Variant({'ok':Group,'err':IDL.Text});const Result=IDL.Variant({'ok':IDL.Null,'err':IDL.Text});const UserResult=IDL.Variant({'ok':User,'err':IDL.Text});const HealthResult=IDL.Record({'status':IDL.Text,'timestamp':IDL.Int});// Service definition\nreturn IDL.Service({// Authentication methods\n'generateOTP':IDL.Func([Email],[OTPResult],[]),'registerUser':IDL.Func([Email,IDL.Text,OTPCode],[AuthResult],[]),'loginUser':IDL.Func([Email],[AuthResult],[]),'logoutUser':IDL.Func([UserId],[Result],[]),'updateUserProfile':IDL.Func([UserId,IDL.Opt(IDL.Text),IDL.Opt(IDL.Text)],[UserResult],[]),// Message methods\n'sendDirectMessage':IDL.Func([UserId,UserId,IDL.Text,MessageType],[MessageResult],[]),'sendGroupMessage':IDL.Func([UserId,GroupId,IDL.Text,MessageType],[MessageResult],[]),'markMessageAsRead':IDL.Func([MessageId,UserId],[Result],[]),'deleteMessage':IDL.Func([MessageId,UserId],[Result],[]),// Group methods\n'createGroup':IDL.Func([IDL.Text,IDL.Opt(IDL.Text),UserId,IDL.Vec(UserId)],[GroupResult],[]),'addMemberToGroup':IDL.Func([GroupId,UserId,UserId],[GroupResult],[]),// Query methods\n'getUser':IDL.Func([UserId],[IDL.Opt(User)],['query']),'getAllUsers':IDL.Func([],[IDL.Vec(User)],['query']),'getOnlineUsers':IDL.Func([],[IDL.Vec(User)],['query']),'getDirectMessages':IDL.Func([UserId,UserId],[IDL.Vec(Message)],['query']),'getGroupMessages':IDL.Func([GroupId],[IDL.Vec(Message)],['query']),'getUserGroups':IDL.Func([UserId],[IDL.Vec(Group)],['query']),'getGroup':IDL.Func([GroupId],[IDL.Opt(Group)],['query']),'getUnreadMessageCount':IDL.Func([UserId],[IDL.Nat],['query']),// Utility methods\n'cleanupExpiredOTPs':IDL.Func([],[],[]),'health':IDL.Func([],[HealthResult],['query'])});};// ChatAPI Class\nclass ChatAPI{constructor(){this.actor=null;this.agent=null;this.isInitialized=false;this.canisterId=null;}async init(){if(this.isInitialized)return true;try{// Get canister ID from environment\nthis.canisterId=process.env.REACT_APP_CANISTER_ID;if(!this.canisterId){throw new Error('REACT_APP_CANISTER_ID not set in environment variables');}console.log('Initializing ChatAPI with canister ID:',this.canisterId);console.log('Host:',host);// Create HTTP agent\nthis.agent=new HttpAgent({host,// Add timeout for better error handling\ntimeout:30000// 30 seconds\n});// IMPORTANT: Fetch root key for local development\nif(process.env.NODE_ENV==='development'){console.log('Fetching root key for local development...');await this.agent.fetchRootKey();}// Create actor\nthis.actor=Actor.createActor(idlFactory,{agent:this.agent,canisterId:this.canisterId});// Test connection\nconsole.log('Testing connection...');await this.health();this.isInitialized=true;console.log('ChatAPI initialized successfully');return true;}catch(error){console.error('Failed to initialize API:',error);this.isInitialized=false;throw new Error(`API initialization failed: ${error.message}`);}}async ensureInitialized(){if(!this.isInitialized){await this.init();}}// Helper method to handle errors\nhandleError(error,operation){console.error(`${operation} error:`,error);if(error.message&&error.message.includes('canister_not_found')){throw new Error('Backend service is not available. Please ensure the canister is deployed.');}if(error.message&&error.message.includes('timeout')){throw new Error('Request timed out. Please try again.');}throw new Error(`${operation} failed: ${error.message||'Unknown error'}`);}// Authentication methods\nasync generateOTP(email){await this.ensureInitialized();try{console.log('Generating OTP for:',email);const result=await this.actor.generateOTP(email);console.log('OTP generation result:',result);return result;}catch(error){this.handleError(error,'Generate OTP');}}async registerUser(email,name,otpCode){await this.ensureInitialized();try{console.log('Registering user:',{email,name,otpCode});const result=await this.actor.registerUser(email,name,otpCode);console.log('Registration result:',result);return result;}catch(error){this.handleError(error,'Register user');}}async loginUser(email){await this.ensureInitialized();try{console.log('Attempting login for:',email);const result=await this.actor.loginUser(email);console.log('Login result:',result);return result;}catch(error){this.handleError(error,'Login user');}}async logoutUser(userId){await this.ensureInitialized();try{console.log('Logging out user:',userId);const result=await this.actor.logoutUser(userId);console.log('Logout result:',result);return result;}catch(error){this.handleError(error,'Logout user');}}async updateUserProfile(userId,name,avatar){await this.ensureInitialized();try{console.log('Updating user profile:',{userId,name,avatar});const result=await this.actor.updateUserProfile(userId,name?[name]:[],avatar?[avatar]:[]);console.log('Update profile result:',result);return result;}catch(error){this.handleError(error,'Update user profile');}}// Message methods\nasync sendDirectMessage(senderId,receiverId,content){let messageType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{text:null};await this.ensureInitialized();try{console.log('Sending direct message:',{senderId,receiverId,content,messageType});const result=await this.actor.sendDirectMessage(senderId,receiverId,content,messageType);console.log('Send message result:',result);return result;}catch(error){this.handleError(error,'Send direct message');}}async sendGroupMessage(senderId,groupId,content){let messageType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{text:null};await this.ensureInitialized();try{console.log('Sending group message:',{senderId,groupId,content,messageType});const result=await this.actor.sendGroupMessage(senderId,groupId,content,messageType);console.log('Send group message result:',result);return result;}catch(error){this.handleError(error,'Send group message');}}async markMessageAsRead(messageId,userId){await this.ensureInitialized();try{console.log('Marking message as read:',{messageId,userId});const result=await this.actor.markMessageAsRead(messageId,userId);console.log('Mark as read result:',result);return result;}catch(error){this.handleError(error,'Mark message as read');}}async deleteMessage(messageId,userId){await this.ensureInitialized();try{console.log('Deleting message:',{messageId,userId});const result=await this.actor.deleteMessage(messageId,userId);console.log('Delete message result:',result);return result;}catch(error){this.handleError(error,'Delete message');}}// Group methods\nasync createGroup(name,description,createdBy,members){await this.ensureInitialized();try{console.log('Creating group:',{name,description,createdBy,members});const result=await this.actor.createGroup(name,description?[description]:[],createdBy,members);console.log('Create group result:',result);return result;}catch(error){this.handleError(error,'Create group');}}async addMemberToGroup(groupId,newMemberId,addedBy){await this.ensureInitialized();try{console.log('Adding member to group:',{groupId,newMemberId,addedBy});const result=await this.actor.addMemberToGroup(groupId,newMemberId,addedBy);console.log('Add member result:',result);return result;}catch(error){this.handleError(error,'Add member to group');}}// Query methods\nasync getUser(userId){await this.ensureInitialized();try{console.log('Getting user:',userId);const result=await this.actor.getUser(userId);console.log('Get user result:',result);return result;}catch(error){this.handleError(error,'Get user');}}async getAllUsers(){await this.ensureInitialized();try{console.log('Getting all users...');const result=await this.actor.getAllUsers();console.log('Get all users result:',result.length,'users');return result;}catch(error){this.handleError(error,'Get all users');}}async getOnlineUsers(){await this.ensureInitialized();try{console.log('Getting online users...');const result=await this.actor.getOnlineUsers();console.log('Get online users result:',result.length,'users');return result;}catch(error){this.handleError(error,'Get online users');}}async getDirectMessages(userId1,userId2){await this.ensureInitialized();try{console.log('Getting direct messages:',{userId1,userId2});const result=await this.actor.getDirectMessages(userId1,userId2);console.log('Get direct messages result:',result.length,'messages');return result;}catch(error){this.handleError(error,'Get direct messages');}}async getGroupMessages(groupId){await this.ensureInitialized();try{console.log('Getting group messages:',groupId);const result=await this.actor.getGroupMessages(groupId);console.log('Get group messages result:',result.length,'messages');return result;}catch(error){this.handleError(error,'Get group messages');}}async getUserGroups(userId){await this.ensureInitialized();try{console.log('Getting user groups:',userId);const result=await this.actor.getUserGroups(userId);console.log('Get user groups result:',result.length,'groups');return result;}catch(error){this.handleError(error,'Get user groups');}}async getGroup(groupId){await this.ensureInitialized();try{console.log('Getting group:',groupId);const result=await this.actor.getGroup(groupId);console.log('Get group result:',result);return result;}catch(error){this.handleError(error,'Get group');}}async getUnreadMessageCount(userId){await this.ensureInitialized();try{console.log('Getting unread message count:',userId);const result=await this.actor.getUnreadMessageCount(userId);console.log('Get unread count result:',result);return result;}catch(error){this.handleError(error,'Get unread message count');}}// Utility methods\nasync cleanupExpiredOTPs(){await this.ensureInitialized();try{console.log('Cleaning up expired OTPs...');const result=await this.actor.cleanupExpiredOTPs();console.log('Cleanup result:',result);return result;}catch(error){this.handleError(error,'Cleanup expired OTPs');}}async health(){await this.ensureInitialized();try{console.log('Checking health...');const result=await this.actor.health();console.log('Health check result:',result);return result;}catch(error){this.handleError(error,'Health check');}}// Helper methods\nisReady(){return this.isInitialized&&this.actor!==null;}getCanisterId(){return this.canisterId;}async reset(){console.log('Resetting ChatAPI...');this.isInitialized=false;this.actor=null;this.agent=null;this.canisterId=null;return await this.init();}// Development helper\nasync testConnection(){try{const health=await this.health();console.log('Connection test successful:',health);return true;}catch(error){console.error('Connection test failed:',error);return false;}}}// Export singleton instance\nconst chatAPI=new ChatAPI();// Auto-initialize if in browser environment\nif(typeof window!=='undefined'){// Initialize on import but don't throw errors\nchatAPI.init().catch(error=>{console.warn('Failed to auto-initialize ChatAPI:',error.message);});}export default chatAPI;","map":{"version":3,"names":["Actor","HttpAgent","host","process","env","NODE_ENV","idlFactory","_ref","IDL","UserId","Text","GroupId","MessageId","Nat","Email","OTPCode","MessageType","Variant","Null","User","Record","Opt","Bool","Int","Message","Group","Vec","AuthResult","OTPResult","MessageResult","GroupResult","Result","UserResult","HealthResult","Service","Func","ChatAPI","constructor","actor","agent","isInitialized","canisterId","init","REACT_APP_CANISTER_ID","Error","console","log","timeout","fetchRootKey","createActor","health","error","message","ensureInitialized","handleError","operation","includes","generateOTP","email","result","registerUser","name","otpCode","loginUser","logoutUser","userId","updateUserProfile","avatar","sendDirectMessage","senderId","receiverId","content","messageType","arguments","length","undefined","text","sendGroupMessage","groupId","markMessageAsRead","messageId","deleteMessage","createGroup","description","createdBy","members","addMemberToGroup","newMemberId","addedBy","getUser","getAllUsers","getOnlineUsers","getDirectMessages","userId1","userId2","getGroupMessages","getUserGroups","getGroup","getUnreadMessageCount","cleanupExpiredOTPs","isReady","getCanisterId","reset","testConnection","chatAPI","window","catch","warn"],"sources":["/Users/ridhoauliarahman/Library/CloudStorage/GoogleDrive-ridho.aulia7324@gmail.com/My Drive/ICP/icp-chat-app/src/frontend/src/services/api.js"],"sourcesContent":["import { Actor, HttpAgent } from '@dfinity/agent';\n\n// Configuration\nconst host = process.env.NODE_ENV === 'development' ? 'http://localhost:4943' : 'https://ic0.app';\n\n// IDL Factory - Interface Definition Language\nconst idlFactory = ({ IDL }) => {\n  // Basic types\n  const UserId = IDL.Text;\n  const GroupId = IDL.Text;\n  const MessageId = IDL.Nat;\n  const Email = IDL.Text;\n  const OTPCode = IDL.Text;\n\n  // Message type variant\n  const MessageType = IDL.Variant({\n    'text': IDL.Null,\n    'image': IDL.Null,\n    'document': IDL.Null,\n    'file': IDL.Null,\n  });\n\n  // User record\n  const User = IDL.Record({\n    'id': UserId,\n    'email': Email,\n    'name': IDL.Text,\n    'avatar': IDL.Opt(IDL.Text),\n    'isOnline': IDL.Bool,\n    'lastSeen': IDL.Int,\n    'createdAt': IDL.Int,\n  });\n\n  // Message record\n  const Message = IDL.Record({\n    'id': MessageId,\n    'senderId': UserId,\n    'receiverId': IDL.Opt(UserId),\n    'groupId': IDL.Opt(GroupId),\n    'content': IDL.Text,\n    'messageType': MessageType,\n    'timestamp': IDL.Int,\n    'isRead': IDL.Bool,\n  });\n\n  // Group record\n  const Group = IDL.Record({\n    'id': GroupId,\n    'name': IDL.Text,\n    'description': IDL.Opt(IDL.Text),\n    'createdBy': UserId,\n    'members': IDL.Vec(UserId),\n    'createdAt': IDL.Int,\n  });\n\n  // Result types\n  const AuthResult = IDL.Variant({\n    'ok': User,\n    'err': IDL.Text,\n  });\n\n  const OTPResult = IDL.Variant({\n    'ok': OTPCode,\n    'err': IDL.Text,\n  });\n\n  const MessageResult = IDL.Variant({\n    'ok': MessageId,\n    'err': IDL.Text,\n  });\n\n  const GroupResult = IDL.Variant({\n    'ok': Group,\n    'err': IDL.Text,\n  });\n\n  const Result = IDL.Variant({\n    'ok': IDL.Null,\n    'err': IDL.Text,\n  });\n\n  const UserResult = IDL.Variant({\n    'ok': User,\n    'err': IDL.Text,\n  });\n\n  const HealthResult = IDL.Record({\n    'status': IDL.Text,\n    'timestamp': IDL.Int,\n  });\n\n  // Service definition\n  return IDL.Service({\n    // Authentication methods\n    'generateOTP': IDL.Func([Email], [OTPResult], []),\n    'registerUser': IDL.Func([Email, IDL.Text, OTPCode], [AuthResult], []),\n    'loginUser': IDL.Func([Email], [AuthResult], []),\n    'logoutUser': IDL.Func([UserId], [Result], []),\n    'updateUserProfile': IDL.Func([UserId, IDL.Opt(IDL.Text), IDL.Opt(IDL.Text)], [UserResult], []),\n    \n    // Message methods\n    'sendDirectMessage': IDL.Func([UserId, UserId, IDL.Text, MessageType], [MessageResult], []),\n    'sendGroupMessage': IDL.Func([UserId, GroupId, IDL.Text, MessageType], [MessageResult], []),\n    'markMessageAsRead': IDL.Func([MessageId, UserId], [Result], []),\n    'deleteMessage': IDL.Func([MessageId, UserId], [Result], []),\n    \n    // Group methods\n    'createGroup': IDL.Func([IDL.Text, IDL.Opt(IDL.Text), UserId, IDL.Vec(UserId)], [GroupResult], []),\n    'addMemberToGroup': IDL.Func([GroupId, UserId, UserId], [GroupResult], []),\n    \n    // Query methods\n    'getUser': IDL.Func([UserId], [IDL.Opt(User)], ['query']),\n    'getAllUsers': IDL.Func([], [IDL.Vec(User)], ['query']),\n    'getOnlineUsers': IDL.Func([], [IDL.Vec(User)], ['query']),\n    'getDirectMessages': IDL.Func([UserId, UserId], [IDL.Vec(Message)], ['query']),\n    'getGroupMessages': IDL.Func([GroupId], [IDL.Vec(Message)], ['query']),\n    'getUserGroups': IDL.Func([UserId], [IDL.Vec(Group)], ['query']),\n    'getGroup': IDL.Func([GroupId], [IDL.Opt(Group)], ['query']),\n    'getUnreadMessageCount': IDL.Func([UserId], [IDL.Nat], ['query']),\n    \n    // Utility methods\n    'cleanupExpiredOTPs': IDL.Func([], [], []),\n    'health': IDL.Func([], [HealthResult], ['query']),\n  });\n};\n\n// ChatAPI Class\nclass ChatAPI {\n  constructor() {\n    this.actor = null;\n    this.agent = null;\n    this.isInitialized = false;\n    this.canisterId = null;\n  }\n\n  async init() {\n    if (this.isInitialized) return true;\n\n    try {\n      // Get canister ID from environment\n      this.canisterId = process.env.REACT_APP_CANISTER_ID;\n      \n      if (!this.canisterId) {\n        throw new Error('REACT_APP_CANISTER_ID not set in environment variables');\n      }\n\n      console.log('Initializing ChatAPI with canister ID:', this.canisterId);\n      console.log('Host:', host);\n\n      // Create HTTP agent\n      this.agent = new HttpAgent({ \n        host,\n        // Add timeout for better error handling\n        timeout: 30000, // 30 seconds\n      });\n      \n      // IMPORTANT: Fetch root key for local development\n      if (process.env.NODE_ENV === 'development') {\n        console.log('Fetching root key for local development...');\n        await this.agent.fetchRootKey();\n      }\n\n      // Create actor\n      this.actor = Actor.createActor(idlFactory, {\n        agent: this.agent,\n        canisterId: this.canisterId,\n      });\n\n      // Test connection\n      console.log('Testing connection...');\n      await this.health();\n      \n      this.isInitialized = true;\n      console.log('ChatAPI initialized successfully');\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize API:', error);\n      this.isInitialized = false;\n      throw new Error(`API initialization failed: ${error.message}`);\n    }\n  }\n\n  async ensureInitialized() {\n    if (!this.isInitialized) {\n      await this.init();\n    }\n  }\n\n  // Helper method to handle errors\n  handleError(error, operation) {\n    console.error(`${operation} error:`, error);\n    \n    if (error.message && error.message.includes('canister_not_found')) {\n      throw new Error('Backend service is not available. Please ensure the canister is deployed.');\n    }\n    \n    if (error.message && error.message.includes('timeout')) {\n      throw new Error('Request timed out. Please try again.');\n    }\n    \n    throw new Error(`${operation} failed: ${error.message || 'Unknown error'}`);\n  }\n\n  // Authentication methods\n  async generateOTP(email) {\n    await this.ensureInitialized();\n    try {\n      console.log('Generating OTP for:', email);\n      const result = await this.actor.generateOTP(email);\n      console.log('OTP generation result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Generate OTP');\n    }\n  }\n\n  async registerUser(email, name, otpCode) {\n    await this.ensureInitialized();\n    try {\n      console.log('Registering user:', { email, name, otpCode });\n      const result = await this.actor.registerUser(email, name, otpCode);\n      console.log('Registration result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Register user');\n    }\n  }\n\n  async loginUser(email) {\n    await this.ensureInitialized();\n    try {\n      console.log('Attempting login for:', email);\n      const result = await this.actor.loginUser(email);\n      console.log('Login result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Login user');\n    }\n  }\n\n  async logoutUser(userId) {\n    await this.ensureInitialized();\n    try {\n      console.log('Logging out user:', userId);\n      const result = await this.actor.logoutUser(userId);\n      console.log('Logout result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Logout user');\n    }\n  }\n\n  async updateUserProfile(userId, name, avatar) {\n    await this.ensureInitialized();\n    try {\n      console.log('Updating user profile:', { userId, name, avatar });\n      const result = await this.actor.updateUserProfile(\n        userId, \n        name ? [name] : [], \n        avatar ? [avatar] : []\n      );\n      console.log('Update profile result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Update user profile');\n    }\n  }\n\n  // Message methods\n  async sendDirectMessage(senderId, receiverId, content, messageType = { text: null }) {\n    await this.ensureInitialized();\n    try {\n      console.log('Sending direct message:', { senderId, receiverId, content, messageType });\n      const result = await this.actor.sendDirectMessage(senderId, receiverId, content, messageType);\n      console.log('Send message result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Send direct message');\n    }\n  }\n\n  async sendGroupMessage(senderId, groupId, content, messageType = { text: null }) {\n    await this.ensureInitialized();\n    try {\n      console.log('Sending group message:', { senderId, groupId, content, messageType });\n      const result = await this.actor.sendGroupMessage(senderId, groupId, content, messageType);\n      console.log('Send group message result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Send group message');\n    }\n  }\n\n  async markMessageAsRead(messageId, userId) {\n    await this.ensureInitialized();\n    try {\n      console.log('Marking message as read:', { messageId, userId });\n      const result = await this.actor.markMessageAsRead(messageId, userId);\n      console.log('Mark as read result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Mark message as read');\n    }\n  }\n\n  async deleteMessage(messageId, userId) {\n    await this.ensureInitialized();\n    try {\n      console.log('Deleting message:', { messageId, userId });\n      const result = await this.actor.deleteMessage(messageId, userId);\n      console.log('Delete message result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Delete message');\n    }\n  }\n\n  // Group methods\n  async createGroup(name, description, createdBy, members) {\n    await this.ensureInitialized();\n    try {\n      console.log('Creating group:', { name, description, createdBy, members });\n      const result = await this.actor.createGroup(\n        name, \n        description ? [description] : [], \n        createdBy, \n        members\n      );\n      console.log('Create group result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Create group');\n    }\n  }\n\n  async addMemberToGroup(groupId, newMemberId, addedBy) {\n    await this.ensureInitialized();\n    try {\n      console.log('Adding member to group:', { groupId, newMemberId, addedBy });\n      const result = await this.actor.addMemberToGroup(groupId, newMemberId, addedBy);\n      console.log('Add member result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Add member to group');\n    }\n  }\n\n  // Query methods\n  async getUser(userId) {\n    await this.ensureInitialized();\n    try {\n      console.log('Getting user:', userId);\n      const result = await this.actor.getUser(userId);\n      console.log('Get user result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Get user');\n    }\n  }\n\n  async getAllUsers() {\n    await this.ensureInitialized();\n    try {\n      console.log('Getting all users...');\n      const result = await this.actor.getAllUsers();\n      console.log('Get all users result:', result.length, 'users');\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Get all users');\n    }\n  }\n\n  async getOnlineUsers() {\n    await this.ensureInitialized();\n    try {\n      console.log('Getting online users...');\n      const result = await this.actor.getOnlineUsers();\n      console.log('Get online users result:', result.length, 'users');\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Get online users');\n    }\n  }\n\n  async getDirectMessages(userId1, userId2) {\n    await this.ensureInitialized();\n    try {\n      console.log('Getting direct messages:', { userId1, userId2 });\n      const result = await this.actor.getDirectMessages(userId1, userId2);\n      console.log('Get direct messages result:', result.length, 'messages');\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Get direct messages');\n    }\n  }\n\n  async getGroupMessages(groupId) {\n    await this.ensureInitialized();\n    try {\n      console.log('Getting group messages:', groupId);\n      const result = await this.actor.getGroupMessages(groupId);\n      console.log('Get group messages result:', result.length, 'messages');\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Get group messages');\n    }\n  }\n\n  async getUserGroups(userId) {\n    await this.ensureInitialized();\n    try {\n      console.log('Getting user groups:', userId);\n      const result = await this.actor.getUserGroups(userId);\n      console.log('Get user groups result:', result.length, 'groups');\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Get user groups');\n    }\n  }\n\n  async getGroup(groupId) {\n    await this.ensureInitialized();\n    try {\n      console.log('Getting group:', groupId);\n      const result = await this.actor.getGroup(groupId);\n      console.log('Get group result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Get group');\n    }\n  }\n\n  async getUnreadMessageCount(userId) {\n    await this.ensureInitialized();\n    try {\n      console.log('Getting unread message count:', userId);\n      const result = await this.actor.getUnreadMessageCount(userId);\n      console.log('Get unread count result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Get unread message count');\n    }\n  }\n\n  // Utility methods\n  async cleanupExpiredOTPs() {\n    await this.ensureInitialized();\n    try {\n      console.log('Cleaning up expired OTPs...');\n      const result = await this.actor.cleanupExpiredOTPs();\n      console.log('Cleanup result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Cleanup expired OTPs');\n    }\n  }\n\n  async health() {\n    await this.ensureInitialized();\n    try {\n      console.log('Checking health...');\n      const result = await this.actor.health();\n      console.log('Health check result:', result);\n      return result;\n    } catch (error) {\n      this.handleError(error, 'Health check');\n    }\n  }\n\n  // Helper methods\n  isReady() {\n    return this.isInitialized && this.actor !== null;\n  }\n\n  getCanisterId() {\n    return this.canisterId;\n  }\n\n  async reset() {\n    console.log('Resetting ChatAPI...');\n    this.isInitialized = false;\n    this.actor = null;\n    this.agent = null;\n    this.canisterId = null;\n    return await this.init();\n  }\n\n  // Development helper\n  async testConnection() {\n    try {\n      const health = await this.health();\n      console.log('Connection test successful:', health);\n      return true;\n    } catch (error) {\n      console.error('Connection test failed:', error);\n      return false;\n    }\n  }\n}\n\n// Export singleton instance\nconst chatAPI = new ChatAPI();\n\n// Auto-initialize if in browser environment\nif (typeof window !== 'undefined') {\n  // Initialize on import but don't throw errors\n  chatAPI.init().catch(error => {\n    console.warn('Failed to auto-initialize ChatAPI:', error.message);\n  });\n}\n\nexport default chatAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}