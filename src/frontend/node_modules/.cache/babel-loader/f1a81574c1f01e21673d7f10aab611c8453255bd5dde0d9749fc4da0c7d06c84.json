{"ast":null,"code":"import{Actor,HttpAgent}from'@dfinity/agent';// Detect environment properly\nconst getHost=()=>{// Check if we're in development\nif(process.env.NODE_ENV==='development'){return'http://localhost:4943';}// Check if we're accessing via localhost (even in production build)\nif(window.location.hostname==='localhost'||window.location.hostname==='127.0.0.1'){return'http://localhost:4943';}// Check if we're accessing via local canister URL\nif(window.location.hostname.includes('localhost')){return'http://localhost:4943';}// Default to IC mainnet\nreturn'https://ic0.app';};const host=getHost();// IDL Factory (sama seperti sebelumnya)\nconst idlFactory=_ref=>{let{IDL}=_ref;const UserId=IDL.Text;const GroupId=IDL.Text;const MessageId=IDL.Nat;const Email=IDL.Text;const OTPCode=IDL.Text;const MessageType=IDL.Variant({'text':IDL.Null,'image':IDL.Null,'document':IDL.Null,'file':IDL.Null});const User=IDL.Record({'id':UserId,'email':Email,'name':IDL.Text,'avatar':IDL.Opt(IDL.Text),'isOnline':IDL.Bool,'lastSeen':IDL.Int,'createdAt':IDL.Int});const Message=IDL.Record({'id':MessageId,'senderId':UserId,'receiverId':IDL.Opt(UserId),'groupId':IDL.Opt(GroupId),'content':IDL.Text,'messageType':MessageType,'timestamp':IDL.Int,'isRead':IDL.Bool});const Group=IDL.Record({'id':GroupId,'name':IDL.Text,'description':IDL.Opt(IDL.Text),'createdBy':UserId,'members':IDL.Vec(UserId),'createdAt':IDL.Int});const AuthResult=IDL.Variant({'ok':User,'err':IDL.Text});const OTPResult=IDL.Variant({'ok':OTPCode,'err':IDL.Text});const MessageResult=IDL.Variant({'ok':MessageId,'err':IDL.Text});const GroupResult=IDL.Variant({'ok':Group,'err':IDL.Text});const Result=IDL.Variant({'ok':IDL.Null,'err':IDL.Text});const UserResult=IDL.Variant({'ok':User,'err':IDL.Text});const HealthResult=IDL.Record({'status':IDL.Text,'timestamp':IDL.Int});return IDL.Service({'generateOTP':IDL.Func([Email],[OTPResult],[]),'registerUser':IDL.Func([Email,IDL.Text,OTPCode],[AuthResult],[]),'loginUser':IDL.Func([Email],[AuthResult],[]),'logoutUser':IDL.Func([UserId],[Result],[]),'updateUserProfile':IDL.Func([UserId,IDL.Opt(IDL.Text),IDL.Opt(IDL.Text)],[UserResult],[]),'sendDirectMessage':IDL.Func([UserId,UserId,IDL.Text,MessageType],[MessageResult],[]),'sendGroupMessage':IDL.Func([UserId,GroupId,IDL.Text,MessageType],[MessageResult],[]),'createGroup':IDL.Func([IDL.Text,IDL.Opt(IDL.Text),UserId,IDL.Vec(UserId)],[GroupResult],[]),'addMemberToGroup':IDL.Func([GroupId,UserId,UserId],[GroupResult],[]),'markMessageAsRead':IDL.Func([MessageId,UserId],[Result],[]),'deleteMessage':IDL.Func([MessageId,UserId],[Result],[]),'getUser':IDL.Func([UserId],[IDL.Opt(User)],['query']),'getAllUsers':IDL.Func([],[IDL.Vec(User)],['query']),'getOnlineUsers':IDL.Func([],[IDL.Vec(User)],['query']),'getDirectMessages':IDL.Func([UserId,UserId],[IDL.Vec(Message)],['query']),'getGroupMessages':IDL.Func([GroupId],[IDL.Vec(Message)],['query']),'getUserGroups':IDL.Func([UserId],[IDL.Vec(Group)],['query']),'getGroup':IDL.Func([GroupId],[IDL.Opt(Group)],['query']),'getUnreadMessageCount':IDL.Func([UserId],[IDL.Nat],['query']),'cleanupExpiredOTPs':IDL.Func([],[],[]),'health':IDL.Func([],[HealthResult],['query'])});};// ChatAPI Class\nclass ChatAPI{constructor(){this.actor=null;this.agent=null;this.isInitialized=false;this.canisterId=null;this.initializationPromise=null;}async init(){if(this.initializationPromise){return this.initializationPromise;}if(this.isInitialized){return true;}this.initializationPromise=this._performInit();return this.initializationPromise;}async _performInit(){try{this.canisterId=process.env.REACT_APP_CANISTER_ID;if(!this.canisterId){throw new Error('REACT_APP_CANISTER_ID not found in environment variables');}console.log('Initializing ChatAPI...');console.log('Canister ID:',this.canisterId);console.log('Host:',host);console.log('Environment:',process.env.NODE_ENV);console.log('Window location:',window.location.href);// Create HTTP agent\nthis.agent=new HttpAgent({host,timeout:10000});// ALWAYS fetch root key for local development\nconst isLocal=host.includes('localhost')||host.includes('127.0.0.1');if(isLocal){console.log('Fetching root key for local development...');await this.agent.fetchRootKey();}// Create actor\nthis.actor=Actor.createActor(idlFactory,{agent:this.agent,canisterId:this.canisterId});this.isInitialized=true;this.initializationPromise=null;console.log('ChatAPI initialized successfully');return true;}catch(error){console.error('Failed to initialize API:',error);this.isInitialized=false;this.initializationPromise=null;throw new Error(`API initialization failed: ${error.message}`);}}async ensureInitialized(){if(!this.isInitialized){await this.init();}}handleError(error,operation){console.error(`${operation} error:`,error);if(error.message&&error.message.includes('canister_not_found')){throw new Error('Backend service is not available. Please check if the canister is running.');}if(error.message&&error.message.includes('timeout')){throw new Error('Request timed out. Please try again.');}if(error.message&&error.message.includes('connection')){throw new Error('Connection failed. Please check your internet connection.');}throw new Error(`${operation} failed: ${error.message||'Unknown error'}`);}// Authentication methods\nasync generateOTP(email){await this.ensureInitialized();try{return await this.actor.generateOTP(email);}catch(error){this.handleError(error,'Generate OTP');}}async registerUser(email,name,otpCode){await this.ensureInitialized();try{return await this.actor.registerUser(email,name,otpCode);}catch(error){this.handleError(error,'Register user');}}async loginUser(email){await this.ensureInitialized();try{return await this.actor.loginUser(email);}catch(error){this.handleError(error,'Login user');}}async logoutUser(userId){await this.ensureInitialized();try{return await this.actor.logoutUser(userId);}catch(error){this.handleError(error,'Logout user');}}async updateUserProfile(userId,name,avatar){await this.ensureInitialized();try{return await this.actor.updateUserProfile(userId,name?[name]:[],avatar?[avatar]:[]);}catch(error){this.handleError(error,'Update user profile');}}// Message methods\nasync sendDirectMessage(senderId,receiverId,content){let messageType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{text:null};await this.ensureInitialized();try{return await this.actor.sendDirectMessage(senderId,receiverId,content,messageType);}catch(error){this.handleError(error,'Send direct message');}}async sendGroupMessage(senderId,groupId,content){let messageType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{text:null};await this.ensureInitialized();try{return await this.actor.sendGroupMessage(senderId,groupId,content,messageType);}catch(error){this.handleError(error,'Send group message');}}async markMessageAsRead(messageId,userId){await this.ensureInitialized();try{return await this.actor.markMessageAsRead(messageId,userId);}catch(error){this.handleError(error,'Mark message as read');}}async deleteMessage(messageId,userId){await this.ensureInitialized();try{return await this.actor.deleteMessage(messageId,userId);}catch(error){this.handleError(error,'Delete message');}}// Group methods\nasync createGroup(name,description,createdBy,members){await this.ensureInitialized();try{return await this.actor.createGroup(name,description?[description]:[],createdBy,members);}catch(error){this.handleError(error,'Create group');}}async addMemberToGroup(groupId,newMemberId,addedBy){await this.ensureInitialized();try{return await this.actor.addMemberToGroup(groupId,newMemberId,addedBy);}catch(error){this.handleError(error,'Add member to group');}}// Query methods\nasync getUser(userId){await this.ensureInitialized();try{return await this.actor.getUser(userId);}catch(error){this.handleError(error,'Get user');}}async getAllUsers(){await this.ensureInitialized();try{return await this.actor.getAllUsers();}catch(error){this.handleError(error,'Get all users');}}async getOnlineUsers(){await this.ensureInitialized();try{return await this.actor.getOnlineUsers();}catch(error){this.handleError(error,'Get online users');}}async getDirectMessages(userId1,userId2){await this.ensureInitialized();try{return await this.actor.getDirectMessages(userId1,userId2);}catch(error){this.handleError(error,'Get direct messages');}}async getGroupMessages(groupId){await this.ensureInitialized();try{return await this.actor.getGroupMessages(groupId);}catch(error){this.handleError(error,'Get group messages');}}async getUserGroups(userId){await this.ensureInitialized();try{return await this.actor.getUserGroups(userId);}catch(error){this.handleError(error,'Get user groups');}}async getGroup(groupId){await this.ensureInitialized();try{return await this.actor.getGroup(groupId);}catch(error){this.handleError(error,'Get group');}}async getUnreadMessageCount(userId){await this.ensureInitialized();try{return await this.actor.getUnreadMessageCount(userId);}catch(error){this.handleError(error,'Get unread message count');}}// Utility methods\nasync cleanupExpiredOTPs(){await this.ensureInitialized();try{return await this.actor.cleanupExpiredOTPs();}catch(error){this.handleError(error,'Cleanup expired OTPs');}}async health(){await this.ensureInitialized();try{return await this.actor.health();}catch(error){this.handleError(error,'Health check');}}// Helper methods\nisReady(){return this.isInitialized&&this.actor!==null;}getCanisterId(){return this.canisterId;}async reset(){console.log('Resetting ChatAPI...');this.isInitialized=false;this.actor=null;this.agent=null;this.canisterId=null;this.initializationPromise=null;return await this.init();}}// Export singleton instance\nconst chatAPI=new ChatAPI();export default chatAPI;","map":{"version":3,"names":["Actor","HttpAgent","getHost","process","env","NODE_ENV","window","location","hostname","includes","host","idlFactory","_ref","IDL","UserId","Text","GroupId","MessageId","Nat","Email","OTPCode","MessageType","Variant","Null","User","Record","Opt","Bool","Int","Message","Group","Vec","AuthResult","OTPResult","MessageResult","GroupResult","Result","UserResult","HealthResult","Service","Func","ChatAPI","constructor","actor","agent","isInitialized","canisterId","initializationPromise","init","_performInit","REACT_APP_CANISTER_ID","Error","console","log","href","timeout","isLocal","fetchRootKey","createActor","error","message","ensureInitialized","handleError","operation","generateOTP","email","registerUser","name","otpCode","loginUser","logoutUser","userId","updateUserProfile","avatar","sendDirectMessage","senderId","receiverId","content","messageType","arguments","length","undefined","text","sendGroupMessage","groupId","markMessageAsRead","messageId","deleteMessage","createGroup","description","createdBy","members","addMemberToGroup","newMemberId","addedBy","getUser","getAllUsers","getOnlineUsers","getDirectMessages","userId1","userId2","getGroupMessages","getUserGroups","getGroup","getUnreadMessageCount","cleanupExpiredOTPs","health","isReady","getCanisterId","reset","chatAPI"],"sources":["/Users/ridhoauliarahman/Library/CloudStorage/GoogleDrive-ridho.aulia7324@gmail.com/My Drive/ICP/icp-chat-app/src/frontend/src/services/api.js"],"sourcesContent":["import { Actor, HttpAgent } from '@dfinity/agent';\n\n// Detect environment properly\nconst getHost = () => {\n  // Check if we're in development\n  if (process.env.NODE_ENV === 'development') {\n    return 'http://localhost:4943';\n  }\n  \n  // Check if we're accessing via localhost (even in production build)\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:4943';\n  }\n  \n  // Check if we're accessing via local canister URL\n  if (window.location.hostname.includes('localhost')) {\n    return 'http://localhost:4943';\n  }\n  \n  // Default to IC mainnet\n  return 'https://ic0.app';\n};\n\nconst host = getHost();\n\n// IDL Factory (sama seperti sebelumnya)\nconst idlFactory = ({ IDL }) => {\n  const UserId = IDL.Text;\n  const GroupId = IDL.Text;\n  const MessageId = IDL.Nat;\n  const Email = IDL.Text;\n  const OTPCode = IDL.Text;\n\n  const MessageType = IDL.Variant({\n    'text': IDL.Null,\n    'image': IDL.Null,\n    'document': IDL.Null,\n    'file': IDL.Null,\n  });\n\n  const User = IDL.Record({\n    'id': UserId,\n    'email': Email,\n    'name': IDL.Text,\n    'avatar': IDL.Opt(IDL.Text),\n    'isOnline': IDL.Bool,\n    'lastSeen': IDL.Int,\n    'createdAt': IDL.Int,\n  });\n\n  const Message = IDL.Record({\n    'id': MessageId,\n    'senderId': UserId,\n    'receiverId': IDL.Opt(UserId),\n    'groupId': IDL.Opt(GroupId),\n    'content': IDL.Text,\n    'messageType': MessageType,\n    'timestamp': IDL.Int,\n    'isRead': IDL.Bool,\n  });\n\n  const Group = IDL.Record({\n    'id': GroupId,\n    'name': IDL.Text,\n    'description': IDL.Opt(IDL.Text),\n    'createdBy': UserId,\n    'members': IDL.Vec(UserId),\n    'createdAt': IDL.Int,\n  });\n\n  const AuthResult = IDL.Variant({\n    'ok': User,\n    'err': IDL.Text,\n  });\n\n  const OTPResult = IDL.Variant({\n    'ok': OTPCode,\n    'err': IDL.Text,\n  });\n\n  const MessageResult = IDL.Variant({\n    'ok': MessageId,\n    'err': IDL.Text,\n  });\n\n  const GroupResult = IDL.Variant({\n    'ok': Group,\n    'err': IDL.Text,\n  });\n\n  const Result = IDL.Variant({\n    'ok': IDL.Null,\n    'err': IDL.Text,\n  });\n\n  const UserResult = IDL.Variant({\n    'ok': User,\n    'err': IDL.Text,\n  });\n\n  const HealthResult = IDL.Record({\n    'status': IDL.Text,\n    'timestamp': IDL.Int,\n  });\n\n  return IDL.Service({\n    'generateOTP': IDL.Func([Email], [OTPResult], []),\n    'registerUser': IDL.Func([Email, IDL.Text, OTPCode], [AuthResult], []),\n    'loginUser': IDL.Func([Email], [AuthResult], []),\n    'logoutUser': IDL.Func([UserId], [Result], []),\n    'updateUserProfile': IDL.Func([UserId, IDL.Opt(IDL.Text), IDL.Opt(IDL.Text)], [UserResult], []),\n    'sendDirectMessage': IDL.Func([UserId, UserId, IDL.Text, MessageType], [MessageResult], []),\n    'sendGroupMessage': IDL.Func([UserId, GroupId, IDL.Text, MessageType], [MessageResult], []),\n    'createGroup': IDL.Func([IDL.Text, IDL.Opt(IDL.Text), UserId, IDL.Vec(UserId)], [GroupResult], []),\n    'addMemberToGroup': IDL.Func([GroupId, UserId, UserId], [GroupResult], []),\n    'markMessageAsRead': IDL.Func([MessageId, UserId], [Result], []),\n    'deleteMessage': IDL.Func([MessageId, UserId], [Result], []),\n    'getUser': IDL.Func([UserId], [IDL.Opt(User)], ['query']),\n    'getAllUsers': IDL.Func([], [IDL.Vec(User)], ['query']),\n    'getOnlineUsers': IDL.Func([], [IDL.Vec(User)], ['query']),\n    'getDirectMessages': IDL.Func([UserId, UserId], [IDL.Vec(Message)], ['query']),\n    'getGroupMessages': IDL.Func([GroupId], [IDL.Vec(Message)], ['query']),\n    'getUserGroups': IDL.Func([UserId], [IDL.Vec(Group)], ['query']),\n    'getGroup': IDL.Func([GroupId], [IDL.Opt(Group)], ['query']),\n    'getUnreadMessageCount': IDL.Func([UserId], [IDL.Nat], ['query']),\n    'cleanupExpiredOTPs': IDL.Func([], [], []),\n    'health': IDL.Func([], [HealthResult], ['query']),\n  });\n};\n\n// ChatAPI Class\nclass ChatAPI {\n  constructor() {\n    this.actor = null;\n    this.agent = null;\n    this.isInitialized = false;\n    this.canisterId = null;\n    this.initializationPromise = null;\n  }\n\n  async init() {\n    if (this.initializationPromise) {\n      return this.initializationPromise;\n    }\n\n    if (this.isInitialized) {\n      return true;\n    }\n\n    this.initializationPromise = this._performInit();\n    return this.initializationPromise;\n  }\n\n  async _performInit() {\n    try {\n      this.canisterId = process.env.REACT_APP_CANISTER_ID;\n      \n      if (!this.canisterId) {\n        throw new Error('REACT_APP_CANISTER_ID not found in environment variables');\n      }\n\n      console.log('Initializing ChatAPI...');\n      console.log('Canister ID:', this.canisterId);\n      console.log('Host:', host);\n      console.log('Environment:', process.env.NODE_ENV);\n      console.log('Window location:', window.location.href);\n\n      // Create HTTP agent\n      this.agent = new HttpAgent({ \n        host,\n        timeout: 10000,\n      });\n      \n      // ALWAYS fetch root key for local development\n      const isLocal = host.includes('localhost') || host.includes('127.0.0.1');\n      if (isLocal) {\n        console.log('Fetching root key for local development...');\n        await this.agent.fetchRootKey();\n      }\n\n      // Create actor\n      this.actor = Actor.createActor(idlFactory, {\n        agent: this.agent,\n        canisterId: this.canisterId,\n      });\n\n      this.isInitialized = true;\n      this.initializationPromise = null;\n      \n      console.log('ChatAPI initialized successfully');\n      return true;\n\n    } catch (error) {\n      console.error('Failed to initialize API:', error);\n      this.isInitialized = false;\n      this.initializationPromise = null;\n      throw new Error(`API initialization failed: ${error.message}`);\n    }\n  }\n\n  async ensureInitialized() {\n    if (!this.isInitialized) {\n      await this.init();\n    }\n  }\n\n  handleError(error, operation) {\n    console.error(`${operation} error:`, error);\n    \n    if (error.message && error.message.includes('canister_not_found')) {\n      throw new Error('Backend service is not available. Please check if the canister is running.');\n    }\n    \n    if (error.message && error.message.includes('timeout')) {\n      throw new Error('Request timed out. Please try again.');\n    }\n    \n    if (error.message && error.message.includes('connection')) {\n      throw new Error('Connection failed. Please check your internet connection.');\n    }\n    \n    throw new Error(`${operation} failed: ${error.message || 'Unknown error'}`);\n  }\n\n  // Authentication methods\n  async generateOTP(email) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.generateOTP(email);\n    } catch (error) {\n      this.handleError(error, 'Generate OTP');\n    }\n  }\n\n  async registerUser(email, name, otpCode) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.registerUser(email, name, otpCode);\n    } catch (error) {\n      this.handleError(error, 'Register user');\n    }\n  }\n\n  async loginUser(email) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.loginUser(email);\n    } catch (error) {\n      this.handleError(error, 'Login user');\n    }\n  }\n\n  async logoutUser(userId) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.logoutUser(userId);\n    } catch (error) {\n      this.handleError(error, 'Logout user');\n    }\n  }\n\n  async updateUserProfile(userId, name, avatar) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.updateUserProfile(\n        userId, \n        name ? [name] : [], \n        avatar ? [avatar] : []\n      );\n    } catch (error) {\n      this.handleError(error, 'Update user profile');\n    }\n  }\n\n  // Message methods\n  async sendDirectMessage(senderId, receiverId, content, messageType = { text: null }) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.sendDirectMessage(senderId, receiverId, content, messageType);\n    } catch (error) {\n      this.handleError(error, 'Send direct message');\n    }\n  }\n\n  async sendGroupMessage(senderId, groupId, content, messageType = { text: null }) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.sendGroupMessage(senderId, groupId, content, messageType);\n    } catch (error) {\n      this.handleError(error, 'Send group message');\n    }\n  }\n\n  async markMessageAsRead(messageId, userId) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.markMessageAsRead(messageId, userId);\n    } catch (error) {\n      this.handleError(error, 'Mark message as read');\n    }\n  }\n\n  async deleteMessage(messageId, userId) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.deleteMessage(messageId, userId);\n    } catch (error) {\n      this.handleError(error, 'Delete message');\n    }\n  }\n\n  // Group methods\n  async createGroup(name, description, createdBy, members) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.createGroup(\n        name, \n        description ? [description] : [], \n        createdBy, \n        members\n      );\n    } catch (error) {\n      this.handleError(error, 'Create group');\n    }\n  }\n\n  async addMemberToGroup(groupId, newMemberId, addedBy) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.addMemberToGroup(groupId, newMemberId, addedBy);\n    } catch (error) {\n      this.handleError(error, 'Add member to group');\n    }\n  }\n\n  // Query methods\n  async getUser(userId) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.getUser(userId);\n    } catch (error) {\n      this.handleError(error, 'Get user');\n    }\n  }\n\n  async getAllUsers() {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.getAllUsers();\n    } catch (error) {\n      this.handleError(error, 'Get all users');\n    }\n  }\n\n  async getOnlineUsers() {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.getOnlineUsers();\n    } catch (error) {\n      this.handleError(error, 'Get online users');\n    }\n  }\n\n  async getDirectMessages(userId1, userId2) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.getDirectMessages(userId1, userId2);\n    } catch (error) {\n      this.handleError(error, 'Get direct messages');\n    }\n  }\n\n  async getGroupMessages(groupId) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.getGroupMessages(groupId);\n    } catch (error) {\n      this.handleError(error, 'Get group messages');\n    }\n  }\n\n  async getUserGroups(userId) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.getUserGroups(userId);\n    } catch (error) {\n      this.handleError(error, 'Get user groups');\n    }\n  }\n\n  async getGroup(groupId) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.getGroup(groupId);\n    } catch (error) {\n      this.handleError(error, 'Get group');\n    }\n  }\n\n  async getUnreadMessageCount(userId) {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.getUnreadMessageCount(userId);\n    } catch (error) {\n      this.handleError(error, 'Get unread message count');\n    }\n  }\n\n  // Utility methods\n  async cleanupExpiredOTPs() {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.cleanupExpiredOTPs();\n    } catch (error) {\n      this.handleError(error, 'Cleanup expired OTPs');\n    }\n  }\n\n  async health() {\n    await this.ensureInitialized();\n    try {\n      return await this.actor.health();\n    } catch (error) {\n      this.handleError(error, 'Health check');\n    }\n  }\n\n  // Helper methods\n  isReady() {\n    return this.isInitialized && this.actor !== null;\n  }\n\n  getCanisterId() {\n    return this.canisterId;\n  }\n\n  async reset() {\n    console.log('Resetting ChatAPI...');\n    this.isInitialized = false;\n    this.actor = null;\n    this.agent = null;\n    this.canisterId = null;\n    this.initializationPromise = null;\n    return await this.init();\n  }\n}\n\n// Export singleton instance\nconst chatAPI = new ChatAPI();\n\nexport default chatAPI;"],"mappings":"AAAA,OAASA,KAAK,CAAEC,SAAS,KAAQ,gBAAgB,CAEjD;AACA,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB;AACA,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1C,MAAO,uBAAuB,CAChC,CAEA;AACA,GAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,CAAE,CACxF,MAAO,uBAAuB,CAChC,CAEA;AACA,GAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,WAAW,CAAC,CAAE,CAClD,MAAO,uBAAuB,CAChC,CAEA;AACA,MAAO,iBAAiB,CAC1B,CAAC,CAED,KAAM,CAAAC,IAAI,CAAGR,OAAO,CAAC,CAAC,CAEtB;AACA,KAAM,CAAAS,UAAU,CAAGC,IAAA,EAAa,IAAZ,CAAEC,GAAI,CAAC,CAAAD,IAAA,CACzB,KAAM,CAAAE,MAAM,CAAGD,GAAG,CAACE,IAAI,CACvB,KAAM,CAAAC,OAAO,CAAGH,GAAG,CAACE,IAAI,CACxB,KAAM,CAAAE,SAAS,CAAGJ,GAAG,CAACK,GAAG,CACzB,KAAM,CAAAC,KAAK,CAAGN,GAAG,CAACE,IAAI,CACtB,KAAM,CAAAK,OAAO,CAAGP,GAAG,CAACE,IAAI,CAExB,KAAM,CAAAM,WAAW,CAAGR,GAAG,CAACS,OAAO,CAAC,CAC9B,MAAM,CAAET,GAAG,CAACU,IAAI,CAChB,OAAO,CAAEV,GAAG,CAACU,IAAI,CACjB,UAAU,CAAEV,GAAG,CAACU,IAAI,CACpB,MAAM,CAAEV,GAAG,CAACU,IACd,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAGX,GAAG,CAACY,MAAM,CAAC,CACtB,IAAI,CAAEX,MAAM,CACZ,OAAO,CAAEK,KAAK,CACd,MAAM,CAAEN,GAAG,CAACE,IAAI,CAChB,QAAQ,CAAEF,GAAG,CAACa,GAAG,CAACb,GAAG,CAACE,IAAI,CAAC,CAC3B,UAAU,CAAEF,GAAG,CAACc,IAAI,CACpB,UAAU,CAAEd,GAAG,CAACe,GAAG,CACnB,WAAW,CAAEf,GAAG,CAACe,GACnB,CAAC,CAAC,CAEF,KAAM,CAAAC,OAAO,CAAGhB,GAAG,CAACY,MAAM,CAAC,CACzB,IAAI,CAAER,SAAS,CACf,UAAU,CAAEH,MAAM,CAClB,YAAY,CAAED,GAAG,CAACa,GAAG,CAACZ,MAAM,CAAC,CAC7B,SAAS,CAAED,GAAG,CAACa,GAAG,CAACV,OAAO,CAAC,CAC3B,SAAS,CAAEH,GAAG,CAACE,IAAI,CACnB,aAAa,CAAEM,WAAW,CAC1B,WAAW,CAAER,GAAG,CAACe,GAAG,CACpB,QAAQ,CAAEf,GAAG,CAACc,IAChB,CAAC,CAAC,CAEF,KAAM,CAAAG,KAAK,CAAGjB,GAAG,CAACY,MAAM,CAAC,CACvB,IAAI,CAAET,OAAO,CACb,MAAM,CAAEH,GAAG,CAACE,IAAI,CAChB,aAAa,CAAEF,GAAG,CAACa,GAAG,CAACb,GAAG,CAACE,IAAI,CAAC,CAChC,WAAW,CAAED,MAAM,CACnB,SAAS,CAAED,GAAG,CAACkB,GAAG,CAACjB,MAAM,CAAC,CAC1B,WAAW,CAAED,GAAG,CAACe,GACnB,CAAC,CAAC,CAEF,KAAM,CAAAI,UAAU,CAAGnB,GAAG,CAACS,OAAO,CAAC,CAC7B,IAAI,CAAEE,IAAI,CACV,KAAK,CAAEX,GAAG,CAACE,IACb,CAAC,CAAC,CAEF,KAAM,CAAAkB,SAAS,CAAGpB,GAAG,CAACS,OAAO,CAAC,CAC5B,IAAI,CAAEF,OAAO,CACb,KAAK,CAAEP,GAAG,CAACE,IACb,CAAC,CAAC,CAEF,KAAM,CAAAmB,aAAa,CAAGrB,GAAG,CAACS,OAAO,CAAC,CAChC,IAAI,CAAEL,SAAS,CACf,KAAK,CAAEJ,GAAG,CAACE,IACb,CAAC,CAAC,CAEF,KAAM,CAAAoB,WAAW,CAAGtB,GAAG,CAACS,OAAO,CAAC,CAC9B,IAAI,CAAEQ,KAAK,CACX,KAAK,CAAEjB,GAAG,CAACE,IACb,CAAC,CAAC,CAEF,KAAM,CAAAqB,MAAM,CAAGvB,GAAG,CAACS,OAAO,CAAC,CACzB,IAAI,CAAET,GAAG,CAACU,IAAI,CACd,KAAK,CAAEV,GAAG,CAACE,IACb,CAAC,CAAC,CAEF,KAAM,CAAAsB,UAAU,CAAGxB,GAAG,CAACS,OAAO,CAAC,CAC7B,IAAI,CAAEE,IAAI,CACV,KAAK,CAAEX,GAAG,CAACE,IACb,CAAC,CAAC,CAEF,KAAM,CAAAuB,YAAY,CAAGzB,GAAG,CAACY,MAAM,CAAC,CAC9B,QAAQ,CAAEZ,GAAG,CAACE,IAAI,CAClB,WAAW,CAAEF,GAAG,CAACe,GACnB,CAAC,CAAC,CAEF,MAAO,CAAAf,GAAG,CAAC0B,OAAO,CAAC,CACjB,aAAa,CAAE1B,GAAG,CAAC2B,IAAI,CAAC,CAACrB,KAAK,CAAC,CAAE,CAACc,SAAS,CAAC,CAAE,EAAE,CAAC,CACjD,cAAc,CAAEpB,GAAG,CAAC2B,IAAI,CAAC,CAACrB,KAAK,CAAEN,GAAG,CAACE,IAAI,CAAEK,OAAO,CAAC,CAAE,CAACY,UAAU,CAAC,CAAE,EAAE,CAAC,CACtE,WAAW,CAAEnB,GAAG,CAAC2B,IAAI,CAAC,CAACrB,KAAK,CAAC,CAAE,CAACa,UAAU,CAAC,CAAE,EAAE,CAAC,CAChD,YAAY,CAAEnB,GAAG,CAAC2B,IAAI,CAAC,CAAC1B,MAAM,CAAC,CAAE,CAACsB,MAAM,CAAC,CAAE,EAAE,CAAC,CAC9C,mBAAmB,CAAEvB,GAAG,CAAC2B,IAAI,CAAC,CAAC1B,MAAM,CAAED,GAAG,CAACa,GAAG,CAACb,GAAG,CAACE,IAAI,CAAC,CAAEF,GAAG,CAACa,GAAG,CAACb,GAAG,CAACE,IAAI,CAAC,CAAC,CAAE,CAACsB,UAAU,CAAC,CAAE,EAAE,CAAC,CAC/F,mBAAmB,CAAExB,GAAG,CAAC2B,IAAI,CAAC,CAAC1B,MAAM,CAAEA,MAAM,CAAED,GAAG,CAACE,IAAI,CAAEM,WAAW,CAAC,CAAE,CAACa,aAAa,CAAC,CAAE,EAAE,CAAC,CAC3F,kBAAkB,CAAErB,GAAG,CAAC2B,IAAI,CAAC,CAAC1B,MAAM,CAAEE,OAAO,CAAEH,GAAG,CAACE,IAAI,CAAEM,WAAW,CAAC,CAAE,CAACa,aAAa,CAAC,CAAE,EAAE,CAAC,CAC3F,aAAa,CAAErB,GAAG,CAAC2B,IAAI,CAAC,CAAC3B,GAAG,CAACE,IAAI,CAAEF,GAAG,CAACa,GAAG,CAACb,GAAG,CAACE,IAAI,CAAC,CAAED,MAAM,CAAED,GAAG,CAACkB,GAAG,CAACjB,MAAM,CAAC,CAAC,CAAE,CAACqB,WAAW,CAAC,CAAE,EAAE,CAAC,CAClG,kBAAkB,CAAEtB,GAAG,CAAC2B,IAAI,CAAC,CAACxB,OAAO,CAAEF,MAAM,CAAEA,MAAM,CAAC,CAAE,CAACqB,WAAW,CAAC,CAAE,EAAE,CAAC,CAC1E,mBAAmB,CAAEtB,GAAG,CAAC2B,IAAI,CAAC,CAACvB,SAAS,CAAEH,MAAM,CAAC,CAAE,CAACsB,MAAM,CAAC,CAAE,EAAE,CAAC,CAChE,eAAe,CAAEvB,GAAG,CAAC2B,IAAI,CAAC,CAACvB,SAAS,CAAEH,MAAM,CAAC,CAAE,CAACsB,MAAM,CAAC,CAAE,EAAE,CAAC,CAC5D,SAAS,CAAEvB,GAAG,CAAC2B,IAAI,CAAC,CAAC1B,MAAM,CAAC,CAAE,CAACD,GAAG,CAACa,GAAG,CAACF,IAAI,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CACzD,aAAa,CAAEX,GAAG,CAAC2B,IAAI,CAAC,EAAE,CAAE,CAAC3B,GAAG,CAACkB,GAAG,CAACP,IAAI,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CACvD,gBAAgB,CAAEX,GAAG,CAAC2B,IAAI,CAAC,EAAE,CAAE,CAAC3B,GAAG,CAACkB,GAAG,CAACP,IAAI,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CAC1D,mBAAmB,CAAEX,GAAG,CAAC2B,IAAI,CAAC,CAAC1B,MAAM,CAAEA,MAAM,CAAC,CAAE,CAACD,GAAG,CAACkB,GAAG,CAACF,OAAO,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CAC9E,kBAAkB,CAAEhB,GAAG,CAAC2B,IAAI,CAAC,CAACxB,OAAO,CAAC,CAAE,CAACH,GAAG,CAACkB,GAAG,CAACF,OAAO,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CACtE,eAAe,CAAEhB,GAAG,CAAC2B,IAAI,CAAC,CAAC1B,MAAM,CAAC,CAAE,CAACD,GAAG,CAACkB,GAAG,CAACD,KAAK,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CAChE,UAAU,CAAEjB,GAAG,CAAC2B,IAAI,CAAC,CAACxB,OAAO,CAAC,CAAE,CAACH,GAAG,CAACa,GAAG,CAACI,KAAK,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CAC5D,uBAAuB,CAAEjB,GAAG,CAAC2B,IAAI,CAAC,CAAC1B,MAAM,CAAC,CAAE,CAACD,GAAG,CAACK,GAAG,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CACjE,oBAAoB,CAAEL,GAAG,CAAC2B,IAAI,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAC1C,QAAQ,CAAE3B,GAAG,CAAC2B,IAAI,CAAC,EAAE,CAAE,CAACF,YAAY,CAAC,CAAE,CAAC,OAAO,CAAC,CAClD,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAG,OAAQ,CACZC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,KAAK,CAAG,IAAI,CACjB,IAAI,CAACC,KAAK,CAAG,IAAI,CACjB,IAAI,CAACC,aAAa,CAAG,KAAK,CAC1B,IAAI,CAACC,UAAU,CAAG,IAAI,CACtB,IAAI,CAACC,qBAAqB,CAAG,IAAI,CACnC,CAEA,KAAM,CAAAC,IAAIA,CAAA,CAAG,CACX,GAAI,IAAI,CAACD,qBAAqB,CAAE,CAC9B,MAAO,KAAI,CAACA,qBAAqB,CACnC,CAEA,GAAI,IAAI,CAACF,aAAa,CAAE,CACtB,MAAO,KAAI,CACb,CAEA,IAAI,CAACE,qBAAqB,CAAG,IAAI,CAACE,YAAY,CAAC,CAAC,CAChD,MAAO,KAAI,CAACF,qBAAqB,CACnC,CAEA,KAAM,CAAAE,YAAYA,CAAA,CAAG,CACnB,GAAI,CACF,IAAI,CAACH,UAAU,CAAG3C,OAAO,CAACC,GAAG,CAAC8C,qBAAqB,CAEnD,GAAI,CAAC,IAAI,CAACJ,UAAU,CAAE,CACpB,KAAM,IAAI,CAAAK,KAAK,CAAC,0DAA0D,CAAC,CAC7E,CAEAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtCD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE,IAAI,CAACP,UAAU,CAAC,CAC5CM,OAAO,CAACC,GAAG,CAAC,OAAO,CAAE3C,IAAI,CAAC,CAC1B0C,OAAO,CAACC,GAAG,CAAC,cAAc,CAAElD,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC,CACjD+C,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAE/C,MAAM,CAACC,QAAQ,CAAC+C,IAAI,CAAC,CAErD;AACA,IAAI,CAACV,KAAK,CAAG,GAAI,CAAA3C,SAAS,CAAC,CACzBS,IAAI,CACJ6C,OAAO,CAAE,KACX,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,OAAO,CAAG9C,IAAI,CAACD,QAAQ,CAAC,WAAW,CAAC,EAAIC,IAAI,CAACD,QAAQ,CAAC,WAAW,CAAC,CACxE,GAAI+C,OAAO,CAAE,CACXJ,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC,CACzD,KAAM,KAAI,CAACT,KAAK,CAACa,YAAY,CAAC,CAAC,CACjC,CAEA;AACA,IAAI,CAACd,KAAK,CAAG3C,KAAK,CAAC0D,WAAW,CAAC/C,UAAU,CAAE,CACzCiC,KAAK,CAAE,IAAI,CAACA,KAAK,CACjBE,UAAU,CAAE,IAAI,CAACA,UACnB,CAAC,CAAC,CAEF,IAAI,CAACD,aAAa,CAAG,IAAI,CACzB,IAAI,CAACE,qBAAqB,CAAG,IAAI,CAEjCK,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C,MAAO,KAAI,CAEb,CAAE,MAAOM,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,IAAI,CAACd,aAAa,CAAG,KAAK,CAC1B,IAAI,CAACE,qBAAqB,CAAG,IAAI,CACjC,KAAM,IAAI,CAAAI,KAAK,CAAC,8BAA8BQ,KAAK,CAACC,OAAO,EAAE,CAAC,CAChE,CACF,CAEA,KAAM,CAAAC,iBAAiBA,CAAA,CAAG,CACxB,GAAI,CAAC,IAAI,CAAChB,aAAa,CAAE,CACvB,KAAM,KAAI,CAACG,IAAI,CAAC,CAAC,CACnB,CACF,CAEAc,WAAWA,CAACH,KAAK,CAAEI,SAAS,CAAE,CAC5BX,OAAO,CAACO,KAAK,CAAC,GAAGI,SAAS,SAAS,CAAEJ,KAAK,CAAC,CAE3C,GAAIA,KAAK,CAACC,OAAO,EAAID,KAAK,CAACC,OAAO,CAACnD,QAAQ,CAAC,oBAAoB,CAAC,CAAE,CACjE,KAAM,IAAI,CAAA0C,KAAK,CAAC,4EAA4E,CAAC,CAC/F,CAEA,GAAIQ,KAAK,CAACC,OAAO,EAAID,KAAK,CAACC,OAAO,CAACnD,QAAQ,CAAC,SAAS,CAAC,CAAE,CACtD,KAAM,IAAI,CAAA0C,KAAK,CAAC,sCAAsC,CAAC,CACzD,CAEA,GAAIQ,KAAK,CAACC,OAAO,EAAID,KAAK,CAACC,OAAO,CAACnD,QAAQ,CAAC,YAAY,CAAC,CAAE,CACzD,KAAM,IAAI,CAAA0C,KAAK,CAAC,2DAA2D,CAAC,CAC9E,CAEA,KAAM,IAAI,CAAAA,KAAK,CAAC,GAAGY,SAAS,YAAYJ,KAAK,CAACC,OAAO,EAAI,eAAe,EAAE,CAAC,CAC7E,CAEA;AACA,KAAM,CAAAI,WAAWA,CAACC,KAAK,CAAE,CACvB,KAAM,KAAI,CAACJ,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAACqB,WAAW,CAACC,KAAK,CAAC,CAC5C,CAAE,MAAON,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,cAAc,CAAC,CACzC,CACF,CAEA,KAAM,CAAAO,YAAYA,CAACD,KAAK,CAAEE,IAAI,CAAEC,OAAO,CAAE,CACvC,KAAM,KAAI,CAACP,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAACuB,YAAY,CAACD,KAAK,CAAEE,IAAI,CAAEC,OAAO,CAAC,CAC5D,CAAE,MAAOT,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,eAAe,CAAC,CAC1C,CACF,CAEA,KAAM,CAAAU,SAASA,CAACJ,KAAK,CAAE,CACrB,KAAM,KAAI,CAACJ,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC0B,SAAS,CAACJ,KAAK,CAAC,CAC1C,CAAE,MAAON,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,YAAY,CAAC,CACvC,CACF,CAEA,KAAM,CAAAW,UAAUA,CAACC,MAAM,CAAE,CACvB,KAAM,KAAI,CAACV,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC2B,UAAU,CAACC,MAAM,CAAC,CAC5C,CAAE,MAAOZ,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,aAAa,CAAC,CACxC,CACF,CAEA,KAAM,CAAAa,iBAAiBA,CAACD,MAAM,CAAEJ,IAAI,CAAEM,MAAM,CAAE,CAC5C,KAAM,KAAI,CAACZ,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC6B,iBAAiB,CACvCD,MAAM,CACNJ,IAAI,CAAG,CAACA,IAAI,CAAC,CAAG,EAAE,CAClBM,MAAM,CAAG,CAACA,MAAM,CAAC,CAAG,EACtB,CAAC,CACH,CAAE,MAAOd,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,qBAAqB,CAAC,CAChD,CACF,CAEA;AACA,KAAM,CAAAe,iBAAiBA,CAACC,QAAQ,CAAEC,UAAU,CAAEC,OAAO,CAAgC,IAA9B,CAAAC,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAEG,IAAI,CAAE,IAAK,CAAC,CACjF,KAAM,KAAI,CAACrB,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC+B,iBAAiB,CAACC,QAAQ,CAAEC,UAAU,CAAEC,OAAO,CAAEC,WAAW,CAAC,CACvF,CAAE,MAAOnB,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,qBAAqB,CAAC,CAChD,CACF,CAEA,KAAM,CAAAwB,gBAAgBA,CAACR,QAAQ,CAAES,OAAO,CAAEP,OAAO,CAAgC,IAA9B,CAAAC,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAEG,IAAI,CAAE,IAAK,CAAC,CAC7E,KAAM,KAAI,CAACrB,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAACwC,gBAAgB,CAACR,QAAQ,CAAES,OAAO,CAAEP,OAAO,CAAEC,WAAW,CAAC,CACnF,CAAE,MAAOnB,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,oBAAoB,CAAC,CAC/C,CACF,CAEA,KAAM,CAAA0B,iBAAiBA,CAACC,SAAS,CAAEf,MAAM,CAAE,CACzC,KAAM,KAAI,CAACV,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC0C,iBAAiB,CAACC,SAAS,CAAEf,MAAM,CAAC,CAC9D,CAAE,MAAOZ,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,sBAAsB,CAAC,CACjD,CACF,CAEA,KAAM,CAAA4B,aAAaA,CAACD,SAAS,CAAEf,MAAM,CAAE,CACrC,KAAM,KAAI,CAACV,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC4C,aAAa,CAACD,SAAS,CAAEf,MAAM,CAAC,CAC1D,CAAE,MAAOZ,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,gBAAgB,CAAC,CAC3C,CACF,CAEA;AACA,KAAM,CAAA6B,WAAWA,CAACrB,IAAI,CAAEsB,WAAW,CAAEC,SAAS,CAAEC,OAAO,CAAE,CACvD,KAAM,KAAI,CAAC9B,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC6C,WAAW,CACjCrB,IAAI,CACJsB,WAAW,CAAG,CAACA,WAAW,CAAC,CAAG,EAAE,CAChCC,SAAS,CACTC,OACF,CAAC,CACH,CAAE,MAAOhC,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,cAAc,CAAC,CACzC,CACF,CAEA,KAAM,CAAAiC,gBAAgBA,CAACR,OAAO,CAAES,WAAW,CAAEC,OAAO,CAAE,CACpD,KAAM,KAAI,CAACjC,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAACiD,gBAAgB,CAACR,OAAO,CAAES,WAAW,CAAEC,OAAO,CAAC,CACzE,CAAE,MAAOnC,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,qBAAqB,CAAC,CAChD,CACF,CAEA;AACA,KAAM,CAAAoC,OAAOA,CAACxB,MAAM,CAAE,CACpB,KAAM,KAAI,CAACV,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAACoD,OAAO,CAACxB,MAAM,CAAC,CACzC,CAAE,MAAOZ,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,UAAU,CAAC,CACrC,CACF,CAEA,KAAM,CAAAqC,WAAWA,CAAA,CAAG,CAClB,KAAM,KAAI,CAACnC,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAACqD,WAAW,CAAC,CAAC,CACvC,CAAE,MAAOrC,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,eAAe,CAAC,CAC1C,CACF,CAEA,KAAM,CAAAsC,cAAcA,CAAA,CAAG,CACrB,KAAM,KAAI,CAACpC,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAACsD,cAAc,CAAC,CAAC,CAC1C,CAAE,MAAOtC,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,kBAAkB,CAAC,CAC7C,CACF,CAEA,KAAM,CAAAuC,iBAAiBA,CAACC,OAAO,CAAEC,OAAO,CAAE,CACxC,KAAM,KAAI,CAACvC,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAACuD,iBAAiB,CAACC,OAAO,CAAEC,OAAO,CAAC,CAC7D,CAAE,MAAOzC,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,qBAAqB,CAAC,CAChD,CACF,CAEA,KAAM,CAAA0C,gBAAgBA,CAACjB,OAAO,CAAE,CAC9B,KAAM,KAAI,CAACvB,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC0D,gBAAgB,CAACjB,OAAO,CAAC,CACnD,CAAE,MAAOzB,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,oBAAoB,CAAC,CAC/C,CACF,CAEA,KAAM,CAAA2C,aAAaA,CAAC/B,MAAM,CAAE,CAC1B,KAAM,KAAI,CAACV,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC2D,aAAa,CAAC/B,MAAM,CAAC,CAC/C,CAAE,MAAOZ,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,iBAAiB,CAAC,CAC5C,CACF,CAEA,KAAM,CAAA4C,QAAQA,CAACnB,OAAO,CAAE,CACtB,KAAM,KAAI,CAACvB,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC4D,QAAQ,CAACnB,OAAO,CAAC,CAC3C,CAAE,MAAOzB,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,WAAW,CAAC,CACtC,CACF,CAEA,KAAM,CAAA6C,qBAAqBA,CAACjC,MAAM,CAAE,CAClC,KAAM,KAAI,CAACV,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC6D,qBAAqB,CAACjC,MAAM,CAAC,CACvD,CAAE,MAAOZ,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,0BAA0B,CAAC,CACrD,CACF,CAEA;AACA,KAAM,CAAA8C,kBAAkBA,CAAA,CAAG,CACzB,KAAM,KAAI,CAAC5C,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC8D,kBAAkB,CAAC,CAAC,CAC9C,CAAE,MAAO9C,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,sBAAsB,CAAC,CACjD,CACF,CAEA,KAAM,CAAA+C,MAAMA,CAAA,CAAG,CACb,KAAM,KAAI,CAAC7C,iBAAiB,CAAC,CAAC,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAAClB,KAAK,CAAC+D,MAAM,CAAC,CAAC,CAClC,CAAE,MAAO/C,KAAK,CAAE,CACd,IAAI,CAACG,WAAW,CAACH,KAAK,CAAE,cAAc,CAAC,CACzC,CACF,CAEA;AACAgD,OAAOA,CAAA,CAAG,CACR,MAAO,KAAI,CAAC9D,aAAa,EAAI,IAAI,CAACF,KAAK,GAAK,IAAI,CAClD,CAEAiE,aAAaA,CAAA,CAAG,CACd,MAAO,KAAI,CAAC9D,UAAU,CACxB,CAEA,KAAM,CAAA+D,KAAKA,CAAA,CAAG,CACZzD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnC,IAAI,CAACR,aAAa,CAAG,KAAK,CAC1B,IAAI,CAACF,KAAK,CAAG,IAAI,CACjB,IAAI,CAACC,KAAK,CAAG,IAAI,CACjB,IAAI,CAACE,UAAU,CAAG,IAAI,CACtB,IAAI,CAACC,qBAAqB,CAAG,IAAI,CACjC,MAAO,MAAM,KAAI,CAACC,IAAI,CAAC,CAAC,CAC1B,CACF,CAEA;AACA,KAAM,CAAA8D,OAAO,CAAG,GAAI,CAAArE,OAAO,CAAC,CAAC,CAE7B,cAAe,CAAAqE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}